#+TITLE: Linux 知识大全
#+DATE: <2020-12-18 10:49:14>
#+TAGS[]: linux
#+CATEGORIES[]: linux
#+LANGUAGE: zh-cn
#+STARTUP: indent


* 👴  Commands(命令)

** fasd

#+begin_example
fasd [options] [query ...]
[f|a|s|d|z] [opions] [query ...]
  options:
    -s         list paths with scores
    -l         list paths without scores
    -i         interactive mode
    -e <cmd>   set command to execute on the result file
    -b <name>  only use <name> backend
    -B <name>  add additional backend <name>
    -a         match files and directories
    -d         match directories only
    -f         match files only
    -r         match by rank only
    -t         match by recent access only
    -R         reverse listing order
    -h         show a brief help message
    -[0-9]     select the nth entry

fasd [-A|-D] [paths ...]
    -A    add paths
    -D    delete paths
#+end_example

#+begin_src shell
cd ~/ccc/tmp
#+end_src

#+RESULTS:

** grep, egrep, fgrep

[[https://man7.org/linux/man-pages/man1/grep.1.html][grep(1) - Linux manual page]]

grep [OPTION...] PATTERNS [FILE...]
grep [OPTION...] -e PATTERNS ... [FILE...]
grep [OPTION...] -f PATTERN_FILE ... [FILE...]

** ripgrep 搜索命令

https://github.com/BurntSushi/ripgrep#installation

** diff

| 选项                         | 简介                            |
|------------------------------+---------------------------------|
| -i                           | 忽略文件内容大小写              |
| -E                           | 忽略 tab 符号变化               |
| -b                           | 忽略空格变化                    |
| -w                           | 忽略所有空格                    |
| -B                           | 忽略所有空行                    |
| -I RE                        | 忽略匹配的行                    |
| -a --text                    | 将所有文件当做文本处理          |
| -c -C NUM                    | 输出拷贝的内容的指定行，默认：3 |
| -u -U NUM                    | -                               |
| -p --show-c-function         | 显示 C 函数变更                 |
| -F RE                        | -                               |
| -q --brief                   | 仅文件不同是输出                |
| -e --ed                      | -                               |
| --normal                     | 输出正常 diff                   |
| -n --rcs                     | 输出RCS格式不同                 |
| -y --side-by-side            | 输出成两列                      |
| -W NUM                       | -                               |
| --left-column                | -                               |
| -D NAME                      | -                               |
| -l --paginate                | -                               |
| -t --expand-tabs             | -                               |
| -T --initial-tab             | -                               |
| -r --recursive               | 递归比较                        |
| -N --new-file                | -                               |
| -x PAT                       | 排除匹配文件比较                |
| -X FILE                      | -                               |
| -S FILE --starting-file=FILE | -                               |

** tree 命令使用

install: ~brew install truee~

| 选项               | 含义                               |
|--------------------+------------------------------------|
| ~-a~               | 递归列出所有，默认使用             |
| ~-d~               | 仅列出目录                         |
| ~-l~               | TODO                               |
| ~-f~               | 全路径(相对)显示                   |
| ~-x~               | TODO                               |
| ~-L~               | 指定列出的层级                     |
| ~-R~               | 重新执行命令，当目录层级达到上限时 |
| ~-P pattern~       | 列出与指定 ~pattern~ 匹配的结果    |
| ~-I pattern~       | 与 ~-P~ 相反，匹配的不列出来       |
| ~--ignore-case~    | ~-P~, ~-I~ 忽略大小写              |
| ~-o filename~      | 结果输出到指定文件                 |
|--------------------+------------------------------------|
| 文件选项           |                                    |
| ~-q~               | 将不可打印字符输出成 ~?~           |
| ~-N~               | 将不可打印字符输出成 ~is~          |
| ~-Q~               | 文件名双引号括起来                 |
| ~-p~               | 输出文件权限                       |
| ~-u~               | 输出文件 owner 或 UID              |
| ~-g~               | 输出文件用户组或 GID               |
| ~-s~               | 输出每个文件的字节大小             |
| ~-h~               | 以可读形式输出每个文件字节大小     |
| ~--si~             | 和 ~-h~ 类似，不过是以 ~SI~ 单位   |
| ~-D~               | 输出上次修改的时间                 |
| ~-F~               | 目录最后显示 ~/~                   |
| ~--inodes~         | 输出文件 inode 数字                |
| ~--device~         | 输出每个文件所属的设备ID           |
|--------------------+------------------------------------|
| 排序选项           |                                    |
| ~-v~               | 根据 version                       |
| ~-t~               | 根据上次修改时间                   |
| ~-c~               | 根据上次状态变更时间               |
| ~-U~               | 取消排序                           |
| ~-r~               | 逆序                               |
| ~--dirsfirst~      | 目录显示在文件之前                 |
| ~--sort X~         | name, version, size, mtime, ctime  |
|--------------------+------------------------------------|
| 图形化选项         |                                    |
| ~-i~               | 不缩进                             |
| ~-A~               | ANSI lines                         |
| ~-S~               | 示例： ~��� package.json~          |
| ~-n~               | 关闭色彩                           |
| ~-C~               | 颜色显示                           |
|--------------------+------------------------------------|
| XML/HTML/JSON 选项 |                                    |
| ~-X~               | XML 格式输出                       |
| ~-J~               | JSON 格式输出                      |
| ~-H baseHREF~      | HTML 格式输出                      |
| ~-T string~        | -                                  |
| ~--nolinks~        | -                                  |
|--------------------+------------------------------------|
| 输入选项           |                                    |
| ~--fromfile~       | 从文件读取                         |

*-I,-P* 使用的时候多个规则： ~-I 'dist|__tests__'~ 会同时忽略 dist 和 __tests__
  目录或文件。

* crontab 定时任务

[[http://codingpub.github.io/2016/10/27/OS-X-%E6%B7%BB%E5%8A%A0%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/][OS X 添加定时任务 | Coding Pub]]


