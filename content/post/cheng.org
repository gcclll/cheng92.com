#+TITLE: 我的私人空间
#+DATE: <2021-03-03 19:52:03>
#+TAGS[]: soft, macos, window
#+CATEGORIES[]: tools
#+LANGUAGE: zh-cn
#+STARTUP: indent

#+begin_quote
杂七杂八的一些东西，总要往哪里放，今天解决明天又忘记了，好记性不如烂笔头，:smile::smile:。
#+end_quote

* 优质博文(含 github)
1. [[https://imququ.com/post/series.html][Jerry Qu, HTTP/HTTP2相关内容丰富的博客]]
2. [[https://segmentfault.com/a/1190000037435824][浏览器是如何工作的：Chrome V8让你更懂JavaScript - SegmentFault 思否]]
3. [[https://zhuanlan.zhihu.com/p/347492556][程序员经常看的开源月刊《HelloGitHub》第 58 期 - 知乎]]
4. [[https://github.com/Troland/how-javascript-works][Troland/how-javascript-works: Knowledge about how javascript works, event loop,service worker,etc.]]

   里面有些文章介绍了，事件循环等一些原理性的东西。
5. [[https://openbase.com/][Openbase: choose the right package every time]]

   技术选型网站，如 vue, react 等待。
6. [[https://www.zhihu.com/question/275283903/answer/829212144][(22 封私信 / 82 条消息) 国内有哪些类似于聚合数据这样的提供免费接口api的 服务供应商？ - 知乎]]

* 数学

** 数学符号大全

[[http://www.fhdq.net/][符号大全-特殊符号-特殊符号大全]]

#+begin_example
常用符号： ＋－×÷﹢﹣±／＝≈≡≠∧∨∑∏∪∩∈⊙⌒⊥∥∠∽≌＜＞≤≥≮≯∧∨√﹙﹚[]﹛﹜∫∮∝∞⊙∏º¹²³⁴ⁿ₁₂₃₄·∶½⅓⅔¼¾⅛⅜⅝⅞∴∵∷αβγδεζηθικλμνξοπρστυφχψω％‰℅°℃℉′″￠〒¤○㎎㎏㎜㎝㎞㎡㎥㏄㏎mlmol㏕Pa＄￡￥㏒㏑壹贰叁肆伍陆柒捌玖拾微毫厘分百千万亿兆吉

几何符号： ⊥ ‖ ∠ ⌒ ⊙ ≡ ≌ △

代数符号： ∝ ∧ ∨ ～ ∫ ≠ ≤ ≥ ≈ ∞ ∶

运算符号： × ÷ √ ±

集合符号： ∪ ∩ ∈ ⊆ ⊂ ⊇ ⊃

特殊符号： ∑ π（圆周率）

推理符号： |a| ⊥ ∽ △ ∠ ∩ ∪ ≠ ≡ ± ≥ ≤ ∈ ← ↑ → ↓ ↖ ↗ ↘ ↙ ‖ ∧ ∨
#+end_example
* 程序员
** ReadTheDocs 创建技术文档

[[https://docs.readthedocs.io/en/stable/guides/platform.html][Read the Docs Guides — Read the Docs 5.8.0 documentation]]

[[https://sphinx-rtd-theme.readthedocs.io/en/stable/][Read the Docs Sphinx Theme — Read the Docs Sphinx Theme 0.5.0 documentation]]

** go

~go get golang.org/x/tools/gopls@latest~
** 正则表达式

1. 学习资料

    https://github.com/ziishaned/learn-regex

2. 正则工具：

   https://regexper.com/#--%28%5C!%29%3E
** 初级阶段学习
- [[https://www.w3schools.com/][w3schools]] 初学
- GeeksforGeeks，全英文不止有算法

  [[http://qiniu.ii6g.com/img/20200925182624.png]]
* 前端开发
不错的前端学习路线网站：https://objtube.github.io/front-end-roadmap/#/ 脑图方式
展示。

** 插件列表
*** jsmind 一款 js 脑图工具。
#+begin_export html
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>BFW NEW PAGE</title>
    <script id="bfwone" type="text/javascript" src="http://repo.bfw.wiki/bfwrepo/js/bfwone.js"></script>
    <script type="text/javascript">
        bready(function() {
            use(["jsmind", "jsmind"], function() {
                function load_jsmind() {
                    var mind = {
                        "meta": {
                            "name": "demo",
                            "author": "hizzgdev@163.com",
                            "version": "0.2",
                        },
                        "format": "node_array",
                        "data": [{
                            "id": "root", "isroot": true, "topic": "jsMind"
                        },

                            {
                                "id": "sub1", "parentid": "root", "topic": "sub1", "background-color": "#0000ff"
                            },
                            {
                                "id": "sub11", "parentid": "sub1", "topic": "sub11"
                            },
                            {
                                "id": "sub12", "parentid": "sub1", "topic": "sub12"
                            },
                            {
                                "id": "sub13", "parentid": "sub1", "topic": "sub13"
                            },

                            {
                                "id": "sub2", "parentid": "root", "topic": "sub2"
                            },
                            {
                                "id": "sub21", "parentid": "sub2", "topic": "sub21"
                            },
                            {
                                "id": "sub22", "parentid": "sub2", "topic": "sub22", "foreground-color": "#33ff33"
                            },

                            {
                                "id": "sub3", "parentid": "root", "topic": "sub3"
                            },
                        ]
                    };
                    var options = {
                        container: 'jsmind_container',
                        editable: true,
                        theme: 'primary'
                    }
                    var jm = jsMind.show(options, mind);
                    // jm.set_readonly(true);
                    // var mind_data = jm.get_data();
                    // alert(mind_data);
                    jm.add_node("sub2", "sub23", "new node", {
                        "background-color": "red"
                    });
                    jm.set_node_color('sub21', 'green', '#ccc');
                }

                load_jsmind();
            });
        });
    </script>
    <style type="text/css">
        #jsmind_container {
            width: 800px;
            height: 500px;
            border: solid 1px #ccc;
            /*background:#f4f4f4;*/
            background: #f4f4f4;
        }
    </style>
</head>
<body>
    <div id="jsmind_container"></div>
</body>
</html>
#+end_export
*** [[https://www.npmjs.com/package/xlsx-to-json][xlsx-to-json]]
xlsx 文件转成 json 数据。
** [[https://github.com/RubyLouvre/anu][anujs]]
** vue
[[https://github.com/vitejs/vite][vite(vue-cli)]]

#+begin_src shell
$ yarn create vite-app <project-name>
$ cd <project-name>
$ yarn
$ yarn dev
#+end_src

或

#+begin_src shell
$ npm install -g @vue/cli
$ vue create 01-vue3-cli
$ cd 01-vue3-cli
$ vue add vue-next
$ npm run serve
#+end_src
** v3boss(Based on vue3)

*** 问题列表

1. 请求出现 <font color="red">500</font>，对比差异只有 RemoteAddress 有点异常???

   #+begin_example
   答：证书问题，使用 `secure: false` 配置选项跳过证书认证
   #+end_example

2. assets 资源引入问题

   #+begin_example
   答：使用 `alias: {}` 选项配置别名，注意必须是 `/@assets/` 方式，以斜杠开始斜杠结束。
   #+end_example

   #+begin_src json
alias: {
  '/@/': path.resolve(__dirname, 'src'),
  '/@assets/': path.resolve(__dirname, 'src/assets')
}
   #+end_src

** 工具
1. ~.gitignore~ 生成网站： https://www.toptal.com/developers/gitignore
* 神器???
*** [[https://github.com/jarun/nnn][nnn]]

  author: https://github.com/jarun

  终端文件管理工具
  [[http://qiniu.ii6g.com/img/20201125234727.png]]

*** [[https://github.com/brookhong/Surfingkeys][Surfingkeys]]

chrome/firefox 按键, https://github.com/brookhong/Surfingkeys。

按键： ~?~ 查看按键表。

常用按键表：
| key            | function                       |
|----------------+--------------------------------|
| 截屏           |                                |
| ~yg~           | 截取当前视图                   |
| ~yG~           | 截取当前整个页面，长图         |
| ~yS~           | capture current scroll target. |
|----------------+--------------------------------|
| ~Alt/Option s~ | on/off Surfingkeys             |
|----------------+--------------------------------|
| 字符查找       |                                |
| ~f~, ~;~       | 向下查找，向下重复查找结果     |
| ~F~, ~,~       | 向上查找，向上重复查找结果     |
|----------------+--------------------------------|
| 定位/导航      |                                |
| ~zz~           | 将鼠标行定位到屏幕中间         |
| ~t~            | 搜索书签或历史                 |
| ~b~            | 打开书签                       |
| ~og~           | 打开搜索引擎，会弹出输入框     |
| ~ow~           | 同上                           |

配置文件：

#+begin_src js
mapkey('<Ctrl-y>', 'Show me the money', function() {
    Front.showPopup('a well-known phrase uttered by characters in the 1996 film Jerry Maguire (Escape to close).');
});
#+end_src

chrome url 操作：
[[http://qiniu.ii6g.com/img/20201127172312.png]]

标记操作，添加-跳转
[[http://qiniu.ii6g.com/img/20201127172426.png]]

当前标签页URL操作：
[[http://qiniu.ii6g.com/img/20201127172514.png]]

tab 操作：
[[http://qiniu.ii6g.com/img/20201127180601.png]]

搜索，打开url操作：
[[http://qiniu.ii6g.com/img/20201127180736.png]]
* Hugo
1. 设置文章列表以 year-month 分类，如图：
   [[http://qiniu.ii6g.com/img/20200901233906.png]]

   修改：[[/theme/even/layouts/_default/section.html]]

   其中的 "2006" 修改成 "2006-01" 即可。
   #+begin_src html
{{- range $index, $element := $paginator.Pages -}}
{{- $thisYear := $element.Date.Format "2006-01" }}
{{- $lastElement := $index | add -1 | index $paginator.Pages }}
{{- if or (eq $index 0) ( ne ($lastElement.Date.Format "2006-01") $thisYear ) }}
<div class="collection-title">
  <h2 class="archive-year">{{ $thisYear }}</h2>
</div>
{{- end }}

<div class="archive-post">
  <span class="archive-post-time">
    {{ $element.Date.Format "01-02" }}
  </span>
  <span class="archive-post-title">
    <a href="{{ $element.RelPermalink }}" class="archive-post-link">
      {{ .Title }}
    </a>
  </span>
</div>
{{- end -}}
   #+end_src
* api

| 名称          | 简介         | 其他               |
|---------------+--------------+--------------------|
| [[https://github.com/iptv-org/iptv][IPTV channels]] | IPTV 频道接口 | [[https://iptv-org.github.io/iptv/channels.json][所有数据 json 文件]] |
|               |              |                    |

* 软件&命令

** crontab 定时任务

[[http://codingpub.github.io/2016/10/27/OS-X-%E6%B7%BB%E5%8A%A0%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/][OS X 添加定时任务 | Coding Pub]]

** macos 重装系统必备步骤
1. 安装 CommandLineTools ，[[https://developer.apple.com/download/more/][直接官网下载就行->>]]

    git 代理设置：

    #+begin_example
    git ----------

    取消
    git config --global --unset http.https://github.com.proxy
    git config --global --unset https.https://github.com.proxy
    git config --global --unset http.proxy
    git config --global --unset https.proxy
    设置
    git config --global http.https://github.com.proxysocks5://127.0.0.1:7891
    git config --global https.https://github.com.proxysocks5://127.0.0.1:7891
    git config --global http.https://github.com.proxyhttps://127.0.0.1:7890
    git config --global https.https://github.com.proxyhttps://127.0.0.1:7890

    git config --global http.proxy socks5://127.0.0.1:7891
    git config --global https.proxy socks5://127.0.0.1:7891
    #+end_example
2. 下载 ssh 配置： ~git clone git@code.aliyun.com:wyu/dotdat.git~

   解决权限问题： ~chmod 400 ~/.ssh/id_rsa_ali~
3. 下载文档: ~git clone git@code.aliyun.com:wyu/documents.git~
4. 下载安装 [[https://www.macports.org/][MacPorts]], [[https://nodejs.org/en/download/][Node.js]] , [[https://github.com/Homebrew/brew][HomeBrew]]

   解决安装冲突问题： ~sudo killall -1 installd~
   解决 npm 安装权限问题： ~sudo chown -R $USER /usr/local/lib/node_modules~

   npm 代理设置和取消：

   #+begin_src shell
    npm config set proxy=http://127.0.0.1:8087
    npm config set registry=http://registry.npmjs.org

    npm config delete proxy
    npm config delete https-proxy
   #+end_src
5. 下载 MacOS 工具： iTerm, oh-my-zsh, [[https://app.diagrams.net/][drawer.io]] [[https://github.com/jgraph/drawio-desktop][drawer.io.pp]]
6. 安装其他 shell 命令工具： *fasd, autojump, n, ag, rg*

   均可以通过 *brew/port* 安装

   ~brew install fasd/...~
   ~sudo port install fasd/...~
7. 安装 [[https://emba.gnu.org/emacs/emacs/tree/emacs-27][Emacs]]

    ~sudo port install emacs-app~
    ~sudo port install emacs~
8. 安装 [[https://github.com/Molunerfinn/picgo/releases][PicGo]] 截图，图床工具: ~brew cask install picgo~

   配置文件 ~~/Library/Application\ Support/picgo/data.json~

   [[http://qiniu.ii6g.com/img/20201031145254.png]]

    七牛秘钥：https://portal.qiniu.com/user/key
9. hugo

   ~brew install hugo~

   rust: ~curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh~
10. 安装 alfred 及其 workflows
11. lsp languages

    https://emacs-lsp.github.io/lsp-mode/page/lsp-eslint/

    #+begin_src shell
    # js/ts, vue, css/less/scss/...
    $ npm i -g javascript-typescript-langserver \
        vls \
        vscode-css-languageserver-bin \
        bash-language-server \
        vscode-html-languageserver-bin \
        typescript \
        vscode-json-languageserver \
        yaml-language-server &&  \
        pip install 'python-language-server[all]' \
        brew install ccls \
        go get golang.org/x/tools/gopls@latest
    #+end_src

    gopls: ~~
12. ssh/sftp 工具： ~npm i -g electerm~

    https://electerm.github.io/electerm/
13. rsync: ~brew install rsync~

    download linux kernel src: ~git clone git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git~
** 字体

#+BEGIN_SRC
$ brew tap homebrew/cask-fonts
$ brew cask install font-fira-code 
#+END_SRC

** 网站
1. [[https://realfavicongenerator.net/][图片/svg 转 favicon]]
** MacOs 工具
*** 其他
1. beyond compare

  破解： https://www.jianshu.com/p/596b4463eacd

  步骤：
  #+begin_src shell
  $ cd /Applications/Beyond Compare.app/Contents/MacOS
  $ mv BCompare BCompare.real
  $ echo '#!/bin/bash
  rm "/Users/$(whoami)/Library/Application Support/Beyond Compare/registry.dat"
  "`dirname "$0"`"/BCompare.real $@
  ' > BCompare
  $ chmod a+x ./BCompare
  #+end_src

*** 系统性工具
1. [[https://setapp.sjv.io/c/1249877/344537/5114][setapp]]
2. [[https://karabiner-elements.pqrs.org/][Karabiner-Elements A powerful and stable keyboard customizer for macOS.]]
3. SpaceLauncher 自定义快捷键
*** 软件网站
1. [[https://xclient.info/][xclient.info]]
*** 分屏
1. [[https://highlyopinionated.co/swish/][Swish 手势分屏，付费]]
   
   使用中文教程： https://sspai.com/post/55285
2. [[https://melisandre.nswebfrog.com/#/][Melisandre，付费]]
3. [[https://manytricks.com/moom/][Moom，付费]]
4. [[https://www.lightpillar.com/mosaic.html][Mosaic，付费]]
5. [[https://apps.apple.com/cn/app/magnet/id441258766][Magnet，付费]]
6. [[https://folivora.ai/][BetterTouchTool，付费]]
7. Hammerspoon
** Alfred
1. [[https://github.com/rtoshiro/alfred-workflows-textshortcut][Text Shourtcut]]
   
   如果用的是 Alfred 3 需要修改下 [[/Users/simon/Library/Application Support/Alfred 3/Alfred.alfredpreferences/workflows/user.workflow.ACE8BAEC-3702-436D-959C-4DBC14DBAFAB/workflows.php]]
   
   将里面的 ~Alfred-2~ 改成 ~Alfred-3~ 就可以用了，不然会报找不到路径。
   
   增加和删除都是针对增加的 abbrev 文件操作。

   1 先复制内容到剪贴板

   2) ts add [shortcut name] 增加

   3) ts del [shortcut name] 删除

   4) ts [shortcut name] 取出对应的内容，复制到当前活跃应用


| command                        | function                                        |
|--------------------------------+-------------------------------------------------|
| web 查询                       |                                                 |
|                                | bd, 百度                                        |
|                                | w3, w3c                                         |
|                                | mdn                                             |
|--------------------------------+-------------------------------------------------|
| open                           | 搜索打开                                        |
| find                           | 查找文件                                        |
| in                             | 内容搜索                                        |
| tags                           | 查找被标记颜色的文件夹                          |
| j                              | autojump                                        |
| user                           | can i use                                       |
| cov                            | 进制转换                                        |
| rjs                            | react docs                                      |
| json                           | json 格式化                                     |
| twd                            | tailwind css docs                               |
| v                              | vuejs docs, ⌘Y 快速预览                         |
| v routing                      | vuejs router docs                               |
| [[https://www.packal.org/workflow/adb][adb]]                            | TODO                                            |
| lc                             | leetcode 搜索 (-e, -m, -h, 容易，中等，高难)    |
| lct                            | leetcode 话题搜索                               |
| gh                             | github search                                   |
| b64                            | 图片转base64                                    |
| fa                             | 搜索 fontasesome 的 icons                       |
| gicon                          | google icons 上搜索                             |
| qr                             | 将文本生成二维码(奇慢无比)                      |
| giphy                          | 搜索动态图片 gif                                |
| ip                             | 查电脑内外网ip                                  |
| gt                             | google 翻译                                     |
| emoj                           | 表情搜索                                        |
| emoji                          | 表情搜索                                        |
| ascii/rascii                   | ASCII编码互转                                   |
| http                           | http 状态码                                     |
| yd                             | 有道翻译，支持双语互转,yd zh=>ja 我爱你，中转日 |
|                                | zh, ja, en, ko, fr,                             |
|                                | ru(俄文), pt(葡萄牙文), es(西班牙文), auto      |
| kill                           | 杀进程                                          |
| audiorec, screenrec, webcamred | 音频/屏幕/视频录制(自带的QuickPlayer)           |
| vd                             | 视频下载(youtube, vimeo,dailymotion,...)        |
| vd-update                      | 更新自身                                        |
| vd video-url                   | 下载到桌面                                      |
| vd-audio video-url             | 下载同时自动分离出音频文件                      |
| vd-info video-url              | 查看视频信息                                    |
|                                |                                                 |
** qshell 批量下载七牛
https://github.com/qiniu/qshell

1. ~$ qshell account <Your AccessKey> <Your SecretKey> <Your Name>~
2. ~$ qshell account -- <Your AccessKey> <Your SecretKey> <Your Name>~ key 可能
   以是以 *-* 开头，就用这个。

@@html:<kbd>@@配置文件：~/.qshell.json@@html:</kbd>@@

** git 命令

删除远程分支： ~$ git push origin :test1~

删除本地分支： ~$ git branch -d test1~

强制删除本地分支： ~$ git branch -D test1~

新增本地分支： ~$ git branch test1~

推送到远程分支： ~$ git push origin test1:test1~

查看远程分支： ~$ git branch -r~

查看本地分支： ~$ git branch -a~

** htop 可视化进程查看工具
~$ brew install htop~
** Travis-CI(Blog 系统集成方案)

1. [[http://www.ruanyifeng.com/blog/2017/12/travis_ci_tutorial.html#:~:text=Travis%20CI%20%E6%8F%90%E4%BE%9B%E7%9A%84%E6%98%AF,%E5%92%8C%E6%B5%8B%E8%AF%95%EF%BC%8C%E5%8F%8D%E9%A6%88%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C%E3%80%82][持续集成服务 Travis CI 教程-阮一峰]]

2. [[https://cola.workxplay.net/ci-cd-travis-cl-and-github-use-rsync-auto-deploy/][travis-ci-ssh-token 问题]]

#+begin_src shell
  $ travis login --pro --github-token xxxx
  $ ssh-keygen -t rsa -b 4096 -C "gccll.love@gmail.com"
  $ travis whoami
  $ ssh-keygen -t rsa
  $ ls
  # 这里是关键，登录的时候用的 --pro 这里也必须用 --pro，不然加到 .org 上去了
  # 坑逼
  $ travis encrypt-file deploy_key --add --pro
  $ ls
#+end_src

** PicGo

https://github.com/PicGo
* git
:PROPERTIES:
:COLUMNS:  %CUSTOM_ID[(Custom Id)]
:CUSTOM_ID: git
:END:

怎么只拉取代码而忽略 ~.git/~ 文件夹 ?

