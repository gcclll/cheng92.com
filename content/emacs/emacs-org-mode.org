#+TITLE: My Emacs Org-Mode Document
#+DATE: <2020-08-28 10:31:10>
#+TAGS[]: emacs, org-mode
#+CATEGORIES[]: emacs
#+LANGUAGE: zh-cn
#+STARTUP: indent align


* tables

** 列宽和对齐(Column width and alignment)

|---+---------------------+--------|
|   | <6>                 |        |
| 1 | one                 | some   |
| 2 | two                 | boring |
| 3 | this is a long text | column |


* keybindings
** 逗号(*,*)

*** *, s* trees/subtrees 操作

| key     | function              | description                    |
|---------+-----------------------+--------------------------------|
| ~, s h~ | org-premote-subtree   | 升级, h4 -> h3                 |
| ~, s l~ | org-demote-subtree    | 降级, h3 -> h4                 |
| ~, s n~ | org-narrow-to-subtree | 定位到当前的标题试图，隐藏其他 |
| ~, s N~ | widen                 | 恢复隐藏                       |
| ~, s j~ | org-move-subtree-down | 当前树下移                     |
| ~, s k~ | org-move-subtree-up   | 当前树上移                     |

*** *, b* org-babel-* 操作

| key     | function                     | description        |
|---------+------------------------------+--------------------|
| ~, b p~ | org-babel-previous-src-block | 跳转到上一个代码块 |
| ~, b n~ | org-babel-next-src-block     | 跳转到下一个代码块 |
|         |                              |                    |
* Hyperlinks(超链接)
** Internal Links(内部链接)
1. org file
   link target: <<target>>
   link source: [[target]]

   这种方式在 hugo 中无法时候用，但是可以通过第二种方式的 ~PROP:
   CUSTOM_ID~ 来实现。
2. in *hugo*
   link target: doc_header
   必须在某个标题下面声明属性，才能其效果。
   #+begin_example
     :PROPERTIES:
     :COLUMNS: %CUSTOM_ID[(Custom Id)]
     :CUSTOM_ID: doc_header
     :END:
   #+end_example

   link source: ~C-c C-l~ 或者 ~org-insert-link~ 或者直接 ~[[#doc_header][文档开
   头位置]]~ ，请点击：[[#doc_header][文档开头位置]]

* Markup for Rich Contents(富文本)

** Literal Examples(文本模板)
:PROPERTIES:
:COLUMNS:  %CUSTOM_ID[(Custom Id)]
:CUSTOM_ID: literal_eg
:END:

适合长文本内容的：
#+begin_example
,* some example from a text file
#+end_example

如果只是简短的语句，可直接使用 `:`(冒号)也可以达到同样效果：
: * some short example from a text file

代码模板：
#+BEGIN_SRC emacs-lisp -n
  (defun org-xor (a b) (ref:sc)
         "Exclusive or."    (ref:jump)
         (if a (not b) b))
#+END_SRC

配置选项: ~-n~ ，可以在代码中加入引用 ~(ref:sc)~ ，然后在文章任意地方使用
~[[(sc)]]~ 创建一个链接，点击后可以定位到代码中该出。

In line [[(sc)]] we remember the current position. [[(jump)][Line (jump)]]
jumps to point-min.

link: [[#literal_eg][literal_eg]]

* 16 Miscellaneous(杂项)
** 16.2 Structure Templates(结构化模板)

#+begin_example
  a	‘#+BEGIN_EXPORT ascii’ … ‘#+END_EXPORT’
  c	‘#+BEGIN_CENTER’ … ‘#+END_CENTER’
  C	‘#+BEGIN_COMMENT’ … ‘#+END_COMMENT’
  e	‘#+BEGIN_EXAMPLE’ … ‘#+END_EXAMPLE’
  E	‘#+BEGIN_EXPORT’ … ‘#+END_EXPORT’
  h	‘#+BEGIN_EXPORT html’ … ‘#+END_EXPORT’
  l	‘#+BEGIN_EXPORT latex’ … ‘#+END_EXPORT’
  q	‘#+BEGIN_QUOTE’ … ‘#+END_QUOTE’
  s	‘#+BEGIN_SRC’ … ‘#+END_SRC’
  v	‘#+BEGIN_VERSE’ … ‘#+END_VERSE’
#+end_example
** 16.7 Summary of In-Buffer Settings(文件设置)

1. `#+STARTUP:`

   | option   | function     |
   |----------+--------------|
   | indent   | 开启自动缩进 |
   | noindent | 关闭西东缩进 |

* Org-mode in hugo

给图片增加属性(使用 ~#+attr_html~)：

#+begin_example
#+attr_html: :width 100 :height 200
[[/images/some-img.png]]
#+end_example

** ~#+~ 开头的属性

- ~#+caption: 设置表名称~
- ~#+attr_html~ 增加 html 属性，比如：
  1. 增加样式名： ~#+attr_html: :class classname~
  2. 设置宽高： ~#+attr_html: :width 100 :height 100~

- ~#+attr_css~ 增加 css 样式，比如：
  1. 设置宽高： ~#+attr_css: :width 100px :height 200px :text-align center~ ，注意和 html 属性区
     分开
* snippets
:PROPERTIES:
:COLUMNS: %CUSTOM_ID[(Custom Id)]
:CUSTOM_ID: snippets
:END:

** 首字母大写

新增函数：

#+begin_src emacs-lisp
(defun my/capitalize-first-char (&optional string)
  "Capitalize only the first character of the input STRING."
  (when (and string (> (length string) 0))
    (let ((first-char (substring string nil 1))
          (rest-str   (substring string 1)))
      (concat (capitalize first-char) rest-str))))
#+end_src

然后在 snippet 文件中调用：
#+begin_example
# -*- mode: snippet -*-
# name: intro
# key: zname
# --
Hi, my name is ${1:$$(my/capitalize-first-char yas-text)}.
$0
#+end_example
