#+TITLE: My Emacs(Spacemacs) Configuration
#+DATE: <2020-08-27 14:20:16>
#+TAGS[]: emacs
#+CATEGORIES[]: emacs
#+LANGUAGE: zh-cn
#+STARTUP: indent


#+BEGIN_QUOTE
[[https://github.com/hick/emacs-chinese][Emacs相关中文问题以及解决方案]]
#+END_QUOTE

* Doom-emacs

感觉 Spacemacs 用起来还是有点卡，且启动慢，用久了更卡了，只能怪自己太菜了，所以今天开始尝试转向 [[https://github.com/hlissner/doom-emacs][doom-emacs]]

配置列表：

1. https://github.com/rschmukler/doom.d
2. https://rgoswami.me/dotdoom/config.html
3. https://github.com/hlissner/doom-emacs-private
4. 主题：https://github.com/hlissner/emacs-doom-themes

** Base Configuration/Operation
*** 重新加载配置

| key       | mode            | function                     |
|-----------+-----------------+------------------------------|
| ~gr~      | evil 选中模式下 | 执行选中代码                 |
| ~C-x C-e~ | -               | ~eval-last-sexp~             |
| ~SPC c e~ | -               | ~M-x +eval/buffer-or-region~ |

** packages
*** smart-hungry-delete

https://github.com/hrehfeld/emacs-smart-hungry-delete

#+BEGIN_SRC elisp
(use-package smart-hungry-delete
  :ensure t
  :bind (("<backspace>" . smart-hungry-delete-backward-char)
		 ("C-d" . smart-hungry-delete-forward-char))
  :defer nil ;; dont defer so we can add our functions to hooks 
  :config (smart-hungry-delete-add-default-hooks)
  )
#+END_SRC

*** string-inflection 代码风格切换(python/java/ruby/...)

[[https://github.com/akicho8/string-inflection][github link-]]

#+BEGIN_SRC emacs-lisp
(defun gcl/string-inflection-cycle-auto ()
  "switching by major-mode"
  (interactive)
  (cond
   ;; for emacs-lisp-mode
   ((eq major-mode 'emacs-lisp-mode)
    (string-inflection-all-cycle))
   ;; for python
   ((eq major-mode 'python-mode)
    (string-inflection-python-style-cycle))
   ;; for java
   ((eq major-mode 'java-mode)
    (string-inflection-java-style-cycle))
   (t
    ;; default
    (string-inflection-java-style-cycle))))
#+END_SRC
** Keybindings
所有常用按键均通过 ~hydra~ 注释方式展现，方便查询：

*** test
key 绑定函数：
- define-key
- global-set-key
- map!
- undefined-key!
- define-key!

#+BEGIN_SRC elisp :eval no
;; bind a global key
(global-set-key (kbd "C-x y") #'do-something)
(map! "C-x y" #'do-something)

;; bind a key on a keymap
(define-key emacs-lisp-mode-map (kbd "C-c p") #'do-something)
(map! :map emacs-lisp-mode-map "C-c p" #'do-something)

;; unbind a key defined elsewhere
(define-key lua-mode-map (kbd "SPC m b") nil)
(map! :map lua-mode-map "SPC m b" nil)

;; bind multiple keys
(global-set-key (kbd "C-x x") #'do-something)
(global-set-key (kbd "C-x y") #'do-something-else)
(global-set-key (kbd "C-x z") #'do-another-thing)
(map! "C-x x" #'do-something
      "C-x y" #'do-something-else
      "C-x z" #'do-another-thing)

;; bind global keys in normal mode
(evil-define-key* 'normal 'global
  (kbd "C-x x") #'do-something
  (kbd "C-x y") #'do-something-else
  (kbd "C-x z") #'do-another-thing)
(map! :n "C-x x" #'do-something
      :n "C-x y" #'do-something-else
      :n "C-x z" #'do-another-thing)

;; or on a deferred keymap
(evil-define-key 'normal emacs-lisp-mode-map
  (kbd "C-x x") #'do-something
  (kbd "C-x y") #'do-something-else
  (kbd "C-x z") #'do-another-thing)
(map! :map emacs-lisp-mode-map
      :n "C-x x" #'do-something
      :n "C-x y" #'do-something-else
      :n "C-x z" #'do-another-thing)

;; or multiple maps
(dolist (map (list emacs-lisp-mode go-mode-map ivy-minibuffer-map))
  (evil-define-key '(normal insert) map
    "a" #'a
    "b" #'b
    "c" #'c))
(map! :map (emacs-lisp-mode go-mode-map ivy-minibuffer-map)
      :ni "a" #'a
      :ni "b" #'b
      :ni "c" #'c)

;; or in multiple states (order of states doesn't matter)
(evil-define-key* '(normal visual) emacs-lisp-mode-map (kbd "C-x x") #'do-something)
(evil-define-key* 'insert emacs-lisp-mode-map (kbd "C-x x") #'do-something-else)
(evil-define-key* '(visual normal insert emacs) emacs-lisp-mode-map (kbd "C-x z") #'do-another-thing)
(map! :map emacs-lisp-mode
      :nv   "C-x x" #'do-something      ; normal+visual
      :i    "C-x y" #'do-something-else ; insert
      :vnie "C-x z" #'do-another-thing) ; visual+normal+insert+emacs

;; You can nest map! calls:
(evil-define-key* '(normal visual) emacs-lisp-mode-map (kbd "C-x x") #'do-something)
(evil-define-key* 'normal go-lisp-mode-map (kbd "C-x x") #'do-something-else)
(map! (:map emacs-lisp-mode :nv "C-x x" #'do-something)
      (:map go-lisp-mode    :n  "C-x x" #'do-something-else))
#+END_SRC


*** 主面板

#+BEGIN_SRC emacs-lisp
(defhydra hydra-main (:color blue :exit t :hint nil)
  "
all hydra apps:
------------------------------------------------------------------
 [_a_]   Tip          [_h_]   Launcher     [_m_]   Multiple Cursors
 [_w_]   Window       [_t_]   Text Zoom    [_o_]   Org Agenda          
"
  ("a" hydra-tip/body)
  ("h" hydra-launcher/body)
  ("m" hydra-multiple-cursors/body)
  ("w" +hydra/window-nav/body)
  ("t" +hydra/text-zoom/body)
  ("o" hydra-org-agenda-view/body)
  )
#+END_SRC

*** 提示面板入口

#+BEGIN_SRC emacs-lisp
;; 提示面板
(defhydra hydra-tip (:color blue :hint nil)
  "
Tips for modes or kyes.
------------------------------------------------------------------
 [_m_]   M-Cursors   [_e_]   Evil    [_u_]   常用    [_q_] Quit
"
  ("m" hydra-tip-mcursors/body)
  ("u" hydra-tip-useful/body)
  ("e" hydra-tip-evil/body)
  ("q" nil)
  )

#+END_SRC

*** 常用按键提示面板

#+BEGIN_SRC emacs-lisp
(defhydra hydra-tip-useful (:color blue :hint nil)
  "
常用操作提示(C-Control, s-Command, M-option/alt)：
------------------------------------------------------------------
  括号操作          文本操作                    搜索/替换
------------------------------------------------------------------
 [C-(] 左括号左移   [s-<] move-text-up      [C-c r] 替换
 [C-)] 右括号右移   [s->] move-text-down    [C-c q] 搜索替换
 [s-)] 左括号右移   [C-+] 放大字体
 [s-(] 右括号左移   [C--] 缩小字体
 [z-]  取消括号     [M-u] 大写化
                    [M-l] 小写化
                    [M-c] 首字母大写
")
#+END_SRC

*** SPC 开始按键提示面板

#+BEGIN_SRC emacs-lisp
(defhydra hydra-tip-spc (:hint nil)
  "
SPC 按键列表
------------------------------------------------------------------
  <a~l>
------------------------------------------------------------------

  [SPC b O] kill-other-buffers
  [SPC l m] lsp-ui-imenu
  [SPC l t] treemacs
")
#+END_SRC

*** Org-mode 按键提示面板

#+BEGIN_SRC emacs-lisp
(defhydra hydra-tip-org (:hint nil)
  "
Org-mode 按键提示
------------------------------------------------------------------
  Table 操作        跳转
------------------------------------------------------------------
  [M-l] 列右移      [gj] 上一个同级标题
  [M-h] 列左移      [gk] 下一个同级标题
  [M-j] 行下移      [gh] 父级标题
  [M-k] 行上移
")
#+END_SRC

*** evil-mode按键提示面板

#+BEGIN_SRC emacs-lisp
(defhydra hydra-tip-evil (:hint nil)
  "
evil 模式下操作命令提示。
------------------------------------------------------------------
  符号/字母                 <g>                         <z>
------------------------------------------------------------------
  [+]   数字+1              [g[] 函数开头               [z-] 取消括号 
  [-]   数字-1              [g]] 函数结尾               [z.] wrap 标签
  [K]   查文档              [g~] 大小写切换             [za] fold 所有 
  [s/S] wrap 字符(选中)     [g0] 行首                   [zo] open 当前
  [s/S] 文件内字符定位      [gd] 查找定义(definition)   [zj] fold 下一个
  [f/F] 行内字符定位        [gD] 查找引用(reference)    [zk] fold 上一个
  [t/T] 行内字符定位        [gt] 切换下一个workspace   [zr] open所有
                            [gx] 交换两个选中区内容     [zm] close所有
                            [gf] 查找光标处名称的文件   [zt] 当前行定位到顶部
                            [gr] 执行选中内容           [zx] kill 当前buffer
                            [gs/] 按字符定位
                            [gsj] 按字符往后定位
                            [gsk] 按字符往前定位
                            [gs[] 按section向前定位
                            [gs]] 按section向后定位
")
#+END_SRC

*** multiple cursors(~C-S-c~, ~Control-Shift-c~)

| key           | function                       | description    |
|---------------+--------------------------------+----------------|
| ~C->~         | ~mc/mark-next-like-this~       | -              |
| ~C-<~         | ~mc/mark-previous-like-this~   | -              |
| ~C-c C-<~     | ~mc/mark-all-like-this~        | -              |
| ~C-S-c C-S-c~ | ~mc/edit-lines~                | S: Shift Key   |
| ~C-S-c 0~     | ~mc/insert-numbers~            | -              |
| ~C-S-c 1~     | ~mc/insert-letters~            | -              |
| ~C-S-c s~     | ~mc/mark-all-in-region~        | -              |
| ~C-S-c S~     | ~mc/mark-all-in-region-regexp~ | -              |
| ~C-j~         | -                              | insert newline |

#+BEGIN_SRC emacs-lisp
(defhydra hydra-tip-mcursors (:color blue :hint nil)
  "
Multiple Cursors Mode Tip(C-Control, S-Shift).

 [C-S-c 0] insert numbers   [C->] next 
 [C-S-c 1] insert letters   [C->] previous
 [C-S-c s] region           [C-c C-<] all
 [C-S-c S] region regexp
 [C-S-c C-S-c] edit lines    
")
#+END_SRC

*** Launcher 按键面板

#+BEGIN_SRC emacs-lisp
(defhydra hydra-launcher (:color blue :hint nil :exit t)
    "
all hydra apps or browse urls:
------------------------------------------------------------------
 [_h_]   Man     [_r_]   Reddit     [_w_]   EmacsWiki   [_z_]   Zhihu
 [_s_]   Shell   [_q_]   Cancel
"
  ("h" man)
  ("r" (browse-url "http://www.reddit.com/r/emacs"))
  ("w" (browse-url "http://www.emacswiki.org/"))
  ("z" (browse-url "https://www.zhihu.com/"))
  ("s" shell)
  ("q" nil))
#+END_SRC

*** crux tool(~C-c~)

| key     | function                      | description                          |
|---------+-------------------------------+--------------------------------------|
| ~C-c o~ | ~crux-open-with~              | open with specific application       |
| ~C-c u~ | ~crux-view-url~               | open the url under cursor            |
| ~C-c D~ | ~crux-delete-file-and-buffer~ | ~SPC f D~ -> ~doom/delete-this-file~ |
| ~C-c S~ | ~crux-find-shell-init-file~   | -                                    |
|         | 中文对齐？？                  |                                      |

*** window operations
| key       | function                  | description |
|-----------+---------------------------+-------------|
| ~SPC w L~ | ~+evil/window-move-right~ | -           |
| ~SPC w H~ | ~+evil/window-move-left~  |             |
| ~SPC w J~ | ~+evil/window-move-down~  |             |
| ~SPC w K~ | ~+evil/window-move-up~    |             |

*** smartparen 括号操作

| key   | function               | description      |
|-------+------------------------+------------------|
| ~z [~ | sp-wrap-square         | replace with ~S~ |
| ~z (~ | sp-wrap-round          | replace with ~S~ |
| ~z {~ | sp-wrap-curly          | replace with ~S~ |
| ~z -~ | sp-splice-sexp         | -                |
| ~z .~ | emmet-wrap-with-markup | -                |
|-------+------------------------+------------------|
| =C-(= | sp-backward-slurp-sexp |                  |
| =C-)= | sp-forward-slurp-sexp  |                  |
| =s-(= | sp-backward-barf-sexp  |                  |
| =s-)= | sp-forward-barf-sexp   |                  |
| =C-{= | sp-backward-sexp       |                  |
| =C-}= | sp-forward-sexp        |                  |

*** +workspace

| key           | function                  | description                |
|---------------+---------------------------+----------------------------|
| ~SPC TAB 0-9~ | -                         | +workspaces switch to(0-9) |
| ~SPC TAB .~   | ~+workspace/switch~       | -                          |
| ~SPC TAB [~   | ~+workspace/previous~     | -                          |
| ~SPC TAB ]~   | ~+workspace/next~         | -                          |
| ~SPC TAB `~   | ~+workspace/last~         | -                          |
| ~SPC TAB d~   | ~+workspace/delete~       | delete this workspace      |
| ~SPC TAB l~   | ~+workspace/load~         | -                          |
| ~SPC TAB n~   | ~+workspace/new~          | -                          |
| ~SPC TAB r~   | ~+workspace/rename~       | -                          |
| ~SPC TAB s~   | ~+workspace/save~         | -                          |
| ~SPC TAB x~   | ~+workspace/kill-session~ | -                          |
| ~SPC TAB R~   | ~+workspace/restore-last~ | -                          |

* Spaceamcs
我的 Spacemacs 配置文件，参考配置来源于 [[https://github.com/zilongshanren/spacemacs-private][子龙山人]] 的配置方案(进行了部分删减)，我的完整配置文档链接[[https://github.com/gcclll/.emacs.d/tree/space/layers/zcheng][🛬🛬🛬]]。
** Awesome/有趣/实用

| key       | function   | description                       |
|-----------+------------+-----------------------------------|
| ~SPC i s~ | ivy-yas    | 插入 snippet 实时显示要插入的内容 |
| ~C-c i m~ | helm-imenu | 函数，变量列表                    |
|           |            |                                   |

~SPC i s~

  [[http://qiniu.ii6g.com/img/20200919230430.png]]
** Key bindings

  我的自定义按键：

  | Key Binding | Description                                                                  |
  |-------------+------------------------------------------------------------------------------|
  | ~SPC a m n~ | emms-next                                                                    |
  | ~SPC a m p~ | emms-previous                                                            |
  |-------------+------------------------------------------------------------------------------|
  |             |                                                                              |
  | ~SPC b i~   | ibuffer                                                                      |
  | ~SPC b D~   | spacemacs/kill-other-buffers                                                 |
  | ~SPC b m s~ | bookmark-set                                                                 |
  | ~SPC b m r~ | bookmark-rename                                                              |
  | ~SPC b m d~ | bookmark-delete                                                              |
  | ~SPC b m j~ | counsel-bookmark                                                             |
  |-------------+------------------------------------------------------------------------------|
  | ~SPC d d~   | dash-at-point                                                                |
  |-------------+------------------------------------------------------------------------------|
  | ~SPC e n~   | flycheck-next-error                                                          |
  | ~SPC e p~   | flycheck-previous-error                                                      |
  |-------------+------------------------------------------------------------------------------|
  | ~SPC f d~   | projectile-find-file-dwim-other-window                                       |
  |-------------+------------------------------------------------------------------------------|
  | ~SPC g g~   | magit                                                                        |
  | ~SPC g L~   | magit-log-buffer-file, show git logs                                         |
  | ~SPC g n~   | smerge-next                                                                  |
  | ~SPC g p~   | smerge-prev                                                                  |
  | ~SPC g M~   | git-messenger:popup-message, show git log message, with `f' open in browser. |
  |-------------+------------------------------------------------------------------------------|
  | ~SPC h h~   | zilongshanren/highlight-dwim                                                 |
  | ~SPC h c~   | zilongshanren/clearn-highlight, TODO                                         |
  |-------------+------------------------------------------------------------------------------|
  | ~SPC o o~   | zilongshanren/helm-hotspots                                                  |
  | ~SPC o x~   | org-open-at-point-global, open link                                          |
  | ~SPC o r~   | zilongshanren/browser-refresh--chrome-applescript                            |
  | ~SPC o s~   | spacemacs/search-engine-select, open search engine list to search            |
  | ~SPC o g~   | my-git-timemachine, git record                                               |
  | ~SPC o !~   | zilongshanren/iterm-shell-command, go current dir & run command              |
  | ~SPC o e~   | tiny-expand                                                                  |
  | ~SPC o i~   | org-mode insert command                                                      |
  | ~SPC o i t~ | org-set-tags-command, --> :done:                                             |
  |-------------+------------------------------------------------------------------------------|
  | ~SPC p b~   | counsel-projectile-switch-to-buffer                                          |
  | ~SPC p t~   | my-simple-todo                                                               |
  | ~SPC p f~   | zilongshanren/open-file-with-projectile-or-counsel-git                       |
  |-------------+------------------------------------------------------------------------------|
  | ~SPC r l~   | ivy-resume, resume last search result                                        |
  |-------------+------------------------------------------------------------------------------|
  | ~SPC s j~   | counsel-jump-in-buffer                                                       |
  |-------------+------------------------------------------------------------------------------|
  | ~SPC y i~   | yas/insert-snippet                                                           |
  | ~SPC y d~   | youdao-dictionary-search-at-point+                                           |
  |-------------+------------------------------------------------------------------------------|
  | ~C-c l~     | zilongshanren/insert-chrome-current-tab-url                                  |
  | ~C-c t~     | org-capture                                                                  |
  | ~C-c r~     | vr/replace                                                                   |
  | ~C-c q~     | vr/query-replace                                                             |
  |-------------+------------------------------------------------------------------------------|
  | ~M--~       | zilongshanren/goto-match-paren                                               |
  | ~M-i~       | string-inflection-java-style-cycle                                           |
  | ~M-'~       | avy-goto-char-2                                                              |
  |-------------+------------------------------------------------------------------------------|
  | ~s-p~       | find-file-in-project                                                         |
  |-------------+------------------------------------------------------------------------------|
  | ~, '~       | ielm, lisp-repl                                                              |
  | ~, g d~     | xref-find-definition                                                         |
  | ~, g b~     | xref-pop-marker-stack                                                        |
  |-------------+------------------------------------------------------------------------------|
  | ~+~         | evil-numbers/inc-at-pt，number +1                                            |
  | ~-~         | evil-numbers/dec-at-pt, number -1                                            |
  |-------------+------------------------------------------------------------------------------|
  | ~g [~       | beginning-of-defun                                                           |
  | ~g ]~       | end-of-defun                                                                 |
  |-------------+------------------------------------------------------------------------------|
  | ~z [~       | sp-wrap-square                                                               |
  | ~z (~       | sp-wrap-round                                                                |
  | ~z {~       | sp-wrap-curly                                                                |
  | ~z -~       | sp-splice-sexp                                                               |
  | ~z .~       | emmet-wrap-with-markup                                                       |
  |-------------+------------------------------------------------------------------------------|

*** vue-mode
   [[https://github.com/syl20bnr/spacemacs/tree/develop/layers/%2Bframeworks/vue][vue-mode-key-bindings]]

*** smartparens(括号操作)

| key   | function               |
|-------+------------------------|
| =C-(= | sp-backward-slurp-sexp |
| =s-(= | sp-backward-barf-sexp  |
| =C-)= | sp-forward-slurp-sexp  |
| =s-)= | sp-forward-barf-sexp   |
| =C-{= | sp-backward-sexp       |
| =C-}= | sp-forward-sexp        |

*** move-text, up/down

| key   | function      |
|-------+---------------|
| ~s-<~ | move-text-up  |
| ~s->~ | move-text-down |

** Modes
*** emms, play music
#+begin_src elisp
  (spacemacs/set-leader-keys "ama" 'emms-add-directory-tree)
  (spacemacs/set-leader-keys "ame" 'emms-smart-browse)
  (spacemacs/set-leader-keys "aml" 'emms-play-playlist)
  (spacemacs/set-leader-keys "amn" 'emms-next)
  (spacemacs/set-leader-keys "amp" 'emms-previous)
  (spacemacs/set-leader-keys "amP" 'emms-pause)
  (spacemacs/set-leader-keys "ams" 'emms-start)
  (spacemacs/set-leader-keys "amS" 'emms-stop)
  (spacemacs/set-leader-keys "amt" 'emms-toggle-repeat-playlist)
#+end_src

| key         | function                     |
|-------------+------------------------------|
| ~SPC a m a~ | 'emms-add-directory-tree     |
| ~SPC a m e~ | 'emms-smart-browse           |
| ~SPC a m l~ | 'emms-play-playlist          |
| ~SPC a m n~ | 'emms-next                   |
| ~SPC a m p~ | 'emms-previous               |
| ~SPC a m P~ | 'emms-pause                  |
| ~SPC a m s~ | 'emms-start                  |
| ~SPC a m S~ | 'emms-stop                   |
| ~SPC a m t~ | 'emms-toggle-repeat-playlist |
|             |                              |
*** DONE ranger
   CLOSED: [2020-08-27 Thu 21:14]

   - State "DONE"       from              [2020-08-27 Thu 21:14]
   | key       | function               |
   |-----------+------------------------|
   | ~SPC a r~ | open ranger            |
   | ~q~       | quit                   |
   | ~j~       | move down              |
   | ~k~       | move up                |
   | ~l~       | into current directory |
   | ~h~       | up to parent dir       |

   file manangement:

   | key          | function                                    |
   |--------------+---------------------------------------------|
   | ~r~          | revert buffer                               |
   | ~R~          | rename                                      |
   | ~D~          | delete                                      |
   | ~yy~         | copy                                        |
   | ~pp~         | paste                                       |
   | ~f~          | search file names                           |
   | ~i~          | toggle showing literal / full-text previews |
   | ~zh~         | toggle dot files                            |
   | ~o~          | sort options                                |
   | ~H~          | search through history                      |
   | ~z-~ or ~z+~ | reduce/increase parents                     |
   | ~C-SPC~      | mark a file or directory                    |
   | ~v~          | toggle mark                                 |
   | ~V~          | visually select lines                       |
   | ~;C~         | copy / move directory                       |
   | ~;+~         | create directory                            |
   | ~SPC a d~    | deer                                        |
   | ~C-j~        | scroll preview window down                  |
   | ~C-k~        | scroll preview window up                    |
   | ~S~          | enter shell                                 |

*** org-mode

   ref: https://practicalli.github.io/spacemacs/org-mode/

   | key     | function     |
   |---------+--------------|
   | ~, i p~ | set property |
   |         |              |

**** text-style

    ~code: , x c~

    /italic: , x i/

    +line-throught: , x s+

    _underline: , x u_

    =verbatim: , x v=

    *bold: , x b*
**** checkbox
    - [ ] todo one, =C-c C-c= change status
    - [X] todo two, done
    - [X] todo three

**** todos
***** TODO todo one
     SCHEDULED: <2020-08-27 Thu>
***** WAITING todo two waiting

     - State "WAITING"    from "TODO"       [2020-08-25 Tue 14:46] \\
       --
***** todo scheduler
     SCHEDULED: <2020-08-25 Tue>
*** TODO tiny, SPC o e
   https://github.com/abo-abo/tiny

*** TODO multiple-cursors
*** TODO prodigy
   blog settings.


*** TODO wrap-region
   
   https://github.com/rejeep/wrap-region.el/blob/master/wrap-region.el

** Misc Settings

*超过 80 列自动换行* ：

#+begin_src elisp
  (add-hook 'org-mode-hook 'turn-on-auto-fill)
  (setq-default fill-column 80)
#+end_src

*自动缩进*:

~(global-aggressive-indent-mode)~

** Issues
*** Points
**** org-mode 简介
    1. Jump to inner link: ~<<text>> <- [[test][text]]~
