#+TITLE: Vue3 3.2 重要更新汇总
#+DATE: <2021-08-29 11:32:09>
#+TAGS[]: vue3, vue-next, vue3.2
#+CATEGORIES[]: vue
#+LANGUAGE: zh-cn
#+STARTUP: indent

#+begin_export html
<link href="https://fonts.goo~gleapis.com/cs~s2?family=ZCOOL+XiaoWei&display=swap" rel="stylesheet">
<link href="/js/vue/formatters-styles/style.css" rel="stylesheet">
<link href="/js/vue/formatters-styles/annotated.css" rel="stylesheet">
<link href="/js/vue/formatters-styles/html.css" rel="stylesheet">
<kbd>
<font color="blue" size="3" style="font-family: 'ZCOOL XiaoWei', serif;">
诗号：六道同坠，魔劫万千，引渡如来。
</font>
</kbd><br><br>
<script src="/js/utils.js"></script>
<!--<script src="/js/vue/vue-next.js"></script>-->
<script src="https://unpkg.com/vue@next"></script>
<script>
insertCssLink("https://unpkg.com/element-plus/lib/theme-chalk/index.css");
</script>
<script src="https://unpkg.com/element-plus/lib/index.full.js"></script>
<script type='text/javascript' src="https://cdn.jsdelivr.net/npm/jsondiffpatch/dist/jsondiffpatch.umd.min.js"></script>
<script src="/js/vue/tests/common.js"></script>
#+end_export

[[/img/bdx/yiyeshu-001.jpg]]

#+begin_quote
本文包含 3.2 大版本所有比较重要的更新点(源码级别分析), 这里将以包的形式做为章节
来划分。
#+end_quote

本文涉及的源码包： [[https://github.com/vuejs/vue-next/tree/master/packages/][all]]。

* compiler-sfc
:PROPERTIES:
:COLUMNS:  %CUSTOM_ID[(Custom Id)]
:CUSTOM_ID: sfc
:END:

** 新增 ref 语法糖（$ref, $raw）
:PROPERTIES:
:COLUMNS:  %CUSTOM_ID[(Custom Id)]
:CUSTOM_ID: new-ref-sugar
:END:

[[/vue/vue-update-log-02-320/#sfc-ref-sugar][UPDATE LOG]]

新增 ref 语法糖：
  1. ~$ref()~ 被解析成 ~_ref()~

     如： ~let foo = $ref(1)~ => ~let foo = _ref(1)~


    #+begin_src js
const url =
  process.env.VNEXT_PKG_RC + "/../compiler-sfc/dist/compiler-sfc.cjs.js";
const value = require(url.replace("stb-", ""));
const { compileScript, parse } = value;

function compileSFCScript(src, options) {
  const { descriptor } = parse(src)
  return compileScript(descriptor, {
    ...options,
    id: 'xxxxxxx'
  })
}

function compileWithRefSugar(src) {
  return compileSFCScript(src, { refSugar: true })
}

const _ = (title, src) => {
  const { content } = compileWithRefSugar(src)
  console.log(title, '\n', content)
}

_('$ref declarations > ', `<script setup>
    let foo = $ref()
    let a = $ref(1)
    let b = $ref({
      count: 0
    })
    let c = () => {}
    let d
    </script>`)

return 0;

  #+end_src

  #+RESULTS:
  #+begin_example
  $ref declarations >
   import { ref as _ref } from 'vue'

  export default {
    setup(__props, { expose }) {
    expose()

      let foo = _ref()
      let a = _ref(1)
      let b = _ref({
        count: 0
      })
      let c = () => {}
      let d

  const __returned__ = { foo, a, b, c, d }
  Object.defineProperty(__returned__, '__isScriptSetup', { enumerable: false, value: true })
  return __returned__
  }

  }
  0
  #+end_example
