#+TITLE: Vue3 更新日志 01(3.0.5 ~ 3.2.0-beta.1)
#+DATE: <2021-06-28 11:29:18>
#+TAGS[]: vue, vue3
#+CATEGORIES[]: vue
#+LANGUAGE: zh-cn
#+STARTUP: indent


#+begin_export html
<link href="https://fonts.goo~gleapis.com/cs~s2?family=ZCOOL+XiaoWei&display=swap" rel="stylesheet">
<link href="/js/vue/formatters-styles/style.css" rel="stylesheet">
<link href="/js/vue/formatters-styles/annotated.css" rel="stylesheet">
<link href="/js/vue/formatters-styles/html.css" rel="stylesheet">
<kbd>
<font color="blue" size="3" style="font-family: 'ZCOOL XiaoWei', serif;">
  诗号：六道同坠，魔劫万千，引渡如来。
</font>
</kbd><br><br>
<script src="/js/utils.js"></script>
<script src="/js/vue/vue-next.js"></script>
<!--<script src="https://unpkg.com/vue@next"></script>-->
<script>
insertCssLink("https://unpkg.com/element-plus/lib/theme-chalk/index.css");
</script>
<script src="https://unpkg.com/element-plus/lib/index.full.js"></script>
<script type='text/javascript' src="https://cdn.jsdelivr.net/npm/jsondiffpatch/dist/jsondiffpatch.umd.min.js"></script>
<script src="/js/vue/tests/common.js"></script>
#+end_export

[[/img/bdx/yiyeshu-001.jpg]]

* 前言

#+begin_tip
@@html:<p><strong>TIP</strong></p>@@

本系列文说明：会不定期的更新本地的 vue-next 仓库，本系列文章则是针对 git pull 后
的更新内容的分析和记录， 。

@@html:<strong><font color="red">可参过链接跳转到对应的分析文章</font></strong>@@
#+end_tip

更新内容：

很久没更新了，惨~~~~~~~~~

捡点重要的来看下吧，以后还是要保持每周拉一次代码比较好！！！

最初分析拉取的代码是： *3.0.4*, 现在都 *3.1.2* 了 尴尬！！!

* 3.0.6(2021-02-24)
** Important

此次更新重点内容(值得关注的点)：

 1. *ADD*: ~BigInt~ 类型和 /SFC/ 支持 @@html:<a href="#add-bigint">:link:</a>@@
 2. *FIX*: 修复 ~class: ['foo', false, undefined, 'bar']~ 被解析成 ~<div class="foo
    bar"/>~ 问题 @@html:<a href="#fix-array-class">:link:</a>@@。
 3. *FIX*: 修复 ~foo-bar~ 事件名无法触发问题 @@html:<a href="#fix-kebab-event-name">:link:</a>@@ 。
 4. *FIX*: ~this.$watch(fn, callback)~ 的 ~fn~ 第一个参数是 ~instance.proxy~ @@html:<a href="#instanceWatch">:link:</a>@@

** DONE Bug Fixes [25/25]
CLOSED: [2021-08-05 Thu 23:42]
:PROPERTIES:
:COLUMNS:  %CUSTOM_ID[(Custom Id)]
:CUSTOM_ID: bug306
:END:

- [X] compiler-core: do not mark v-for as stable on const bindings ([[https://github.com/vuejs/vue-next/commit/734c65badd8395a78d7beee1fc960aee418361a0][734c65b]]), closes [[https://github.com/vitejs/vite/issues/1956][vitejs/vite#1956]]
- [X] compiler-dom: ensure global build filename matches the one defined in package.json (close [[https://github.com/vuejs/vue-next/issues/3181][#3181]]) ([[https://github.com/vuejs/vue-next/issues/3185][#3185]]) ([[https://github.com/vuejs/vue-next/commit/96b64335242a99432080aeb879e5c0787207a0de][96b6433]])
- [X] compiler-dom: fix cdn entries ([[https://github.com/vuejs/vue-next/commit/fcb6c8920c6ee76f57325a178eb9280d7bae4d7c][fcb6c89]]), closes [[https://github.com/vuejs/vue-next/issues/3181][#3181]] [[https://github.com/vuejs/vue-next/issues/3185][#3185]]
- [X] compiler-sfc: compiler blank srcset ([[https://github.com/vuejs/vue-next/issues/3005][#3005]]) ([[https://github.com/vuejs/vue-next/commit/9dc816d63468b0a2fa2b6123959310014e121b58][9dc816d]])

  允许 ~<img src="./logo.png" srcset=""/>~ 的 ~srcset~ 是个空值，编译后：
  #+begin_src js
    _createVNode(\\"img\\", {
      src: \\"./logo.png\\",
      srcset: \\"\\"
    }),
  #+end_src
- [X] compiler-sfc: removeSpecifier issue when removing initial imports (script-setup) ([[https://github.com/vuejs/vue-next/issues/2729][#2729]]) ([[https://github.com/vuejs/vue-next/commit/6d5b62351248780663d2612a1f483f7ea9f5e5a2][6d762a8]])
  #+begin_src js
const url =
  process.env.VNEXT_PKG_RC + "/../compiler-sfc/dist/compiler-sfc.cjs.js";
const value = require(url.replace("stb-", ""));
const parser = '/usr/local/lib/node_modules/@babel/parser/lib'
const { parse: babelParse } = require(parser)
const { compileScript, parse } = value;

const src = `<script setup>
      import { defineProps, defineEmits, ref } from 'vue'
      defineProps(['foo'])
      defineEmits(['bar'])
      const r = ref(0)
      </script>`
const { descriptor } = parse(src)
const code = compileScript(descriptor, { id: 'xxxxx' }).content
console.log('before babel > \n', code);
babelParse(code, {
  sourceType: 'module',
  plugins: ['bigInt', 'optionalChaining', 'nullishCoalescingOperator', 'typescript']
})

console.log('after babel > \n', code);
return 0;
  #+end_src

  #+RESULTS:
  #+begin_example
  before babel >
   import { ref } from 'vue'

  export default {
    props: ['foo'],
    emits: ['bar'],
    setup(__props, { expose }) {
    expose()



        const r = ref(0)

  return { r, ref, __isScriptSetup: true }
  }

  }
  after babel >
   import { ref } from 'vue'

  export default {
    props: ['foo'],
    emits: ['bar'],
    setup(__props, { expose }) {
    expose()



        const r = ref(0)

  return { r, ref, __isScriptSetup: true }
  }

  }
  0
  #+end_example
- [X] compiler-sfc: the empty lang attribute should be treated as no lang specified ([[https://github.com/vuejs/vue-next/issues/3051][#3051]]) ([[https://github.com/vuejs/vue-next/commit/6d5b62351248780663d2612a1f483f7ea9f5e5a2][6d5b623]])
- [X] [[/vue/vue-teardown-7-asset-transform/][compiler-sfc: transformAssetUrls.base should not affect known module requests]] ([[https://github.com/vuejs/vue-next/commit/2ea9867398d19148b32643fa0e6523c95b9ca956][2ea9867]])
- [X] compiler-sfc: treat const reactive() bindings as mutable ([[https://github.com/vuejs/vue-next/commit/03360cefa1b7038174fa3c1fc3a04400b4cdbbce][03360ce]])
  ~const obj = reactive({})~ 编译成 ~let~ 变量。
- [X] compiler-ssr: avoid duplicated asset imports merged from component slot client branch ([[https://github.com/vuejs/vue-next/commit/c69f4ea857b7db8d26bbde2f80786c8212d16770][c69f4ea]]), closes [[https://github.com/vitejs/vite/issues/2034][vitejs/vite#2034]]

  ~root.imports~ Set 改成了 Array，允许重复了.
- [X] devtools: init devtools in production ([[https://github.com/vuejs/vue-next/issues/2906][#2906]]) ([[https://github.com/vuejs/vue-next/commit/4d9bcb768ddc294430aedcf27155aaca292c47bd][4d9bcb7]])
- [X] devtools: send instance to devtools when it's mounted instead of created ([[https://github.com/vuejs/vue-next/commit/4fecb27f8696fdb8f681948543ea81ea62fe43bf][4fecb27]])
- [X] docs: change reference to passed deadline ([[https://github.com/vuejs/vue-next/issues/2930][#2930]]) ([[https://github.com/vuejs/vue-next/commit/de7f9d1efd7fa19a908357d3f3a706c52694d8bd][de7f9d1]])
- [X] hmr: deep clone reused hoisted trees during dev ([[https://github.com/vuejs/vue-next/commit/5a7a1b8293822219283d6e267496bec02234b0bc][5a7a1b8]]), closes [[https://github.com/vitejs/vite/issues/2022][vitejs/vite#2022]]

  开发过程中，对静态提升的组件树进行深拷贝。

  #+begin_src diff
 packages/runtime-core/src/vnode.ts
@@ -459,7 +459,7 @@ export function cloneVNode<T, U>(
): VNode<T, U> {
  // This is intentionally NOT using spread or extend to avoid the runtime
  // key enumeration cost.
-  const { props, ref, patchFlag } = vnode
+  const { props, ref, patchFlag, children } = vnode
  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props
  return {
    __v_isVNode: true,
@@ -479,7 +479,10 @@ export function cloneVNode<T, U>(
          : normalizeRef(extraProps)
        : ref,
    scopeId: vnode.scopeId,
-    children: vnode.children,
+    children:
+      __DEV__ && patchFlag === PatchFlags.HOISTED && isArray(children)
+        ? (children as VNode[]).map(deepCloneVNode)
+        : children,
    target: vnode.target,
    targetAnchor: vnode.targetAnchor,
    staticCount: vnode.staticCount,
@@ -513,6 +516,18 @@ export function cloneVNode<T, U>(
  }
}
  #+end_src

  deep clone 函数：

  #+begin_src typescript
/**
 * Dev only, for HMR of hoisted vnodes reused in v-for
 * https://github.com/vitejs/vite/issues/2022
 */
function deepCloneVNode(vnode: VNode): VNode {
  const cloned = cloneVNode(vnode)
  if (isArray(vnode.children)) {
    cloned.children = (vnode.children as VNode[]).map(deepCloneVNode)
  }
  return cloned
}
  #+end_src
- [X] runtime-core: align $parent/$root with the template ref when using [[/vue/vue-teardown-11-expose/][expose]] ([[https://github.com/vuejs/vue-next/issues/3158][#3158]]) ([[https://github.com/vuejs/vue-next/commit/f43a3b0bebf0837223e7b8f046dad63e34cd323b][f43a3b0]])

  expose 特性详解：[[/vue/vue-teardown-11-expose/][Vue3 功能拆解⑪ expose options&api]]
- [X] runtime-core: allow overriding properties other than props ([[https://github.com/vuejs/vue-next/issues/3105][#3105]]) ([[https://github.com/vuejs/vue-next/commit/73117f6b5b1e36c9400248ed9e815839c49a12c8][73117f6]])

  允许重写非组件 props 的属性，比如：原生 API ~hasOwnProperty~

  #+begin_src diff
  packages/runtime-core/src/componentPublicInstance.ts
@@ -368,7 +368,7 @@ export const PublicInstanceProxyHandlers: ProxyHandler<any> = {
      setupState[key] = value
    } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {
      data[key] = value
-    } else if (key in instance.props) {
+    } else if (hasOwn(instance.props, key)) {
      __DEV__ &&
        warn(
          `Attempting to mutate prop "${key}". Props are readonly.`,
  #+end_src

  测试：

  #+begin_src diff
 packages/runtime-core/__tests__/componentProps.spec.ts
@@ -295,6 +295,10 @@ describe('component props', () => {
      ;(instance!.proxy as any).foo = 2
    }).toThrow(TypeError)
    expect(`Attempting to mutate prop "foo"`).toHaveBeenWarned()
    // should not throw when overriding properties other than props
+    expect(() => {
+      ;(instance!.proxy as any).hasOwnProperty = () => {}
+    }).not.toThrow(TypeError)
  })
  #+end_src
- [X] runtime-core: check the DEV_ROOT_FRAGMENT flag correctly in the dev environment ([[https://github.com/vuejs/vue-next/issues/2750][#2750]]) ([[https://github.com/vuejs/vue-next/commit/347a8798a4c5f0b426f3ac84a01d752d823fb51b][347a879]])

  #+begin_src diff
    // to have comments along side the root element which makes it a fragment
    let root = result
    let setRoot: ((root: VNode) => void) | undefined = undefined
-    if (__DEV__ && result.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT) {
+    if (
+      __DEV__ &&
+      result.patchFlag > 0 &&
+      result.patchFlag & PatchFlags.DEV_ROOT_FRAGMENT
+    ) {
      ;[root, setRoot] = getChildRoot(result)
    }

  #+end_src
- [X] runtime-core: component methods should override global properties in DEV ([[https://github.com/vuejs/vue-next/issues/3074][#3074]]) ([[https://github.com/vuejs/vue-next/commit/2587f36fe311359e2e34f40e8e47d2eebfab7f42][2587f36]])

  #+begin_src diff
 packages/runtime-core/src/componentOptions.ts
@@ -604,7 +604,17 @@ export function applyOptions(
    for (const key in methods) {
      const methodHandler = (methods as MethodOptions)[key]
      if (isFunction(methodHandler)) {
-        ctx[key] = methodHandler.bind(publicThis)
+        // In dev mode, we use the `createRenderContext` function to define methods to the proxy target,
+        // and those are read-only but reconfigurable, so it needs to be redefined here
+        if (__DEV__) {
+          Object.defineProperty(ctx, key, {
+            value: methodHandler.bind(publicThis),
+            configurable: true,
+            enumerable: false
+          })
+        } else {
+          ctx[key] = methodHandler.bind(publicThis)
+        }
        if (__DEV__) {
          checkDuplicateProperties!(OptionTypes.METHODS, key)
        }

  #+end_src

  测试：

  #+begin_src js
const url = process.env.VNEXT_PKG_RC +'/../runtime-test/dist/runtime-test.cjs.js'
const value = require(url.replace('stb-', ''))
const { nodeOps, render, h, serializeInner: s, createApp } = value

const Comp = {
  methods: {
    foo() {
      return 'foo'
    }
  },
  render() {
    return this.foo()
  }
}

const app = createApp(Comp)
app.config.globalProperties.foo = () => 'bar'

const root = nodeOps.createElement('div')
app.mount(root)

console.log(s(root))
return 0

  #+end_src

  #+RESULTS:
  : foo
  : 0
- [X] runtime-core: ensure app instance can be garbage collected after unmount (close [[https://github.com/vuejs/vue-next/issues/3074][#2907]]) ([[https://github.com/vuejs/vue-next/issues/2909][#2909]]) ([[https://github.com/vuejs/vue-next/commit/60e05eff232c3ddfca1c20e52f72aa36165d8a22][60e05ef]])

  #+begin_src diff
 packages/runtime-core/src/apiCreateApp.ts
@@ -272,6 +272,7 @@ export function createAppAPI<HostElement>(
          if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {
            devtoolsUnmountApp(app)
          }
+          delete app._container.__vue_app__
        } else if (__DEV__) {
          warn(`Cannot unmount an app that is not mounted.`)
        }
  #+end_src

  取消引用。

  #+begin_src typescript
function unmount() {
  if (isMounted) {
    render(null, app._container)
    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {
      app._instance = null
      devtoolsUnmountApp(app)
    }
    delete app._container.__vue_app__
  } else if (__DEV__) {
    warn(`Cannot unmount an app that is not mounted.`)
  }
}
  #+end_src

  mount 里面保存的 ~__vue_ap__~

  #+begin_src typescript
function mount(
  rootContainer: HostElement,
  isHydrate?: boolean,
  isSVG?: boolean
): any {
  if (!isMounted) {
    // ...
       vnode.appContext = context

    // HMR root reload ...

    if (isHydrate && hydrate) {
      hydrate(vnode as VNode<Node, Element>, rootContainer as any)
    } else {
      render(vnode, rootContainer, isSVG)
    }
    isMounted = true
    app._container = rootContainer
    // for devtools and telemetry
    ;(rootContainer as any).__vue_app__ = app

    if (__DEV__ || __FEATURE_PROD_DEVTOOLS__) {
      app._instance = vnode.component
      devtoolsInitApp(app, version)
    }

    return vnode.component!.proxy
  }  // ...
}
  #+end_src
- [X] runtime-core: instanceWatch should pass this.proxy to source as the first argument ([[https://github.com/vuejs/vue-next/issues/2753][#2753]]) ([[https://github.com/vuejs/vue-next/commit/ec8fd10cec61c33c7c8056413a1c609ac90e1215][ec8fd10]])
  @@html:<span id="instanceWatch"></span>@@

  当 watch 一个函数的时候，将 instance.proxy 做为第一个参数传给这个函数。

  测试：

  #+begin_src js
const url = process.env.VNEXT_PKG_RC +'/../runtime-test/dist/runtime-test.cjs.js'
const value = require(url.replace('stb-', ''))
const { nodeOps, render, h, serializeInner: s, createApp } = value

let instance = null
const source = (proxy) => console.log(instance && ( proxy === instance.proxy ))
const Comp = {
  created() {
    instance = this
    this.$watch(source, () => {})
  },
  render() {}
}

const root = nodeOps.createElement('div')
createApp(Comp).mount(root)
return 0
  #+end_src

  #+RESULTS:
  : false
  : 0

  修复：

  #+begin_src diff
 packages/runtime-core/src/apiWatch.ts
@@ -181,7 +181,9 @@ function doWatch(
        } else if (isReactive(s)) {
          return traverse(s)
        } else if (isFunction(s)) {
-          return callWithErrorHandling(s, instance, ErrorCodes.WATCH_GETTER)
+          return callWithErrorHandling(s, instance, ErrorCodes.WATCH_GETTER, [
+            instance && (instance.proxy as any)
+          ])
        } else {
          __DEV__ && warnInvalidSource(s)
        }
@@ -190,7 +192,9 @@ function doWatch(
    if (cb) {
      // getter with cb
      getter = () =>
-        callWithErrorHandling(source, instance, ErrorCodes.WATCH_GETTER)
+        callWithErrorHandling(source, instance, ErrorCodes.WATCH_GETTER, [
+          instance && (instance.proxy as any)
+        ])
    } else {
      // no cb -> simple effect
      getter = () => {
  #+end_src
- [X] types: extract the correct props type for the DateConstructor ([[https://github.com/vuejs/vue-next/issues/2676][#2676]]) ([[https://github.com/vuejs/vue-next/commit/48f0d2944f0f9d2f556e62782fc61985897b2ed4][48f0d29]])
- [X] ensure all published packages contan a LICENCE file (close #2650) (#2857) (6a48d23)
- [X] remove superfluous spaces when normalizing class ([[https://github.com/vuejs/vue-next/issues/3083][#3083]]) ([[https://github.com/vuejs/vue-next/commit/4b551420fc058c4683219db5d75893f9fc69aa04][4b55142]])
  @@html:<span id="fix-array-class"></span>@@

  问题如下代码，正常应该忽略 ~undefind~, ~false~ ：
  #+begin_src js
const url = process.env.VNEXT_PKG_RC +'/../runtime-test/dist/runtime-test.cjs.js'
const value = require(url.replace('stb-', ''))
const { nodeOps, render, h, serializeInner: s } = value

const Comp = {
  props: { foo: BigInt },
  render() {
    return h('div', { class: ['foo', undefined, false, 'bar'] }, [this.foo])
  }
}

const root = nodeOps.createElement('div')
render(h(Comp,  {
  foo: BigInt(BigInt(100000111)) + BigInt(2000000000) * BigInt(30000000)
}), root)

console.log(s(root))
return 0
  #+end_src

  #+RESULTS:
  : <div class="foo   bar">60000000100000111</div>
  : 0

  修复：
  #+begin_src diff
 packages/shared/src/normalizeProp.ts
@@ -62,7 +62,10 @@ export function normalizeClass(value: unknown): string {
    res = value
  } else if (isArray(value)) {
    for (let i = 0; i < value.length; i++) {
-      res += normalizeClass(value[i]) + ' '
+      const normalized = normalizeClass(value[i])
+      if (normalized) {
+        res += normalized + ' '
+      }
    }
  } else if (isObject(value)) {
    for (const name in value) {
  #+end_src
- [X] runtime-dom: enable set form attr to null on form-elements ([[https://github.com/vuejs/vue-next/issues/2840][#2840]]) ([[https://github.com/vuejs/vue-next/issues/2849][#2849]]) ([[https://github.com/vuejs/vue-next/commit/f2624380731cc32e71523e8c2c98037e98e09319][f262438]])

  #+begin_src diff
packages/runtime-dom/src/patchProp.ts
@@ -3,7 +3,13 @@ import { patchStyle } from './modules/style'
-  // #1787 form as an attribute must be a string, while it accepts an Element as
-  // a prop
-  if (key === 'form' && typeof value === 'string') {
+  // #1787, #2840 the form property is readonly and can only be set as an
+  // attribute using a string value
+  if (key === 'form' && isFormTag(el.tagName)) {
    return false
  }

packages/shared/src/domTagConfig.ts
@@ -30,6 +30,11 @@ const SVG_TAGS =
const VOID_TAGS =
  'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr'

+ const FORM_TAGS =
+  'button,datalist,fieldset,input,keygen,label,legend,meter,optgroup,option,' +
+  'output,progress,select,textarea'

export const isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS)
export const isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS)
export const isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS)
export const isFormTag = /*#__PURE__*/ makeMap(FORM_TAGS, true)
  #+end_src
- [X] toRef: ref created from union typed prop can't be used in watch ([[https://github.com/vuejs/vue-next/issues/3048][#3048]]) ([[https://github.com/vuejs/vue-next/commit/4ca4666d58ee8025570dc14f1c163bdeac9c6012][4ca4666]])
- [X] should prefix ShadowRoot with window. ([[https://github.com/vuejs/vue-next/issues/2943][#2943]]) ([[https://github.com/vuejs/vue-next/commit/97d6f1a716045123d0e05600e64f11f92f504747][97d6f1a]])

  通过 window 去使用 ShadowRoot，因为它不是 window 上可枚举的属性。

  #+begin_src diff
 packages/runtime-dom/src/index.ts
@@ -119,7 +119,7 @@ function normalizeContainer(
  }
  if (
    __DEV__ &&
-    container instanceof ShadowRoot &&
+    container instanceof window.ShadowRoot &&
    container.mode === 'closed'
  ) {
  #+end_src

** DONE Features [5/5]
CLOSED: [2021-08-05 Thu 23:42]
- [X] remove useless option in KeepAlive ([[https://github.com/vuejs/vue-next/issues/3170][#3170]]) ([[https://github.com/vuejs/vue-next/commit/bd1240c1270b610c4ffcf6c32e2bbe2c9265020f][bd1240c]])

  删除了 KeepAlive 的 ~inheritRef: true~ 选项。
- [X] compiler-core: support BigInt in template ([[https://github.com/vuejs/vue-next/issues/2900][#2900]]) ([[https://github.com/vuejs/vue-next/commit/c9f94fa3cfbe8fcd9ea3d49d523dfb282c468369][c9f94fa]])

  将 ~BigInt~ 标记为全局变量。

  #+begin_src diff
  packages/shared/src/globalsWhitelist.ts
@@ -3,6 +3,6 @@ import { makeMap } from './makeMap'
const GLOBALS_WHITE_LISTED =
  'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +
  'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +
-  'Object,Boolean,String,RegExp,Map,Set,JSON,Intl'
+  'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt'

export const isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED)
#+end_src

  测试结果：
  #+begin_export html
  <div id="ZA4bDx"></div>
  <script class="ZA4bDx">
  const app = Vue.createApp({
    template: `
      <div class="comment-block">{{ BigInt(BigInt(100000111)) + BigInt(2000000000n) * 30000000n }}</div>
      <el-button type="primary" @click="click">查看测试源码</el-button>
      <div class="chroma language-js" v-if="showCode"><pre class="chroma">{{code}}</pre></div>
    `,
    setup() {
      const showCode = Vue.ref(false)
      return {
        showCode,
        code: Vue.computed(() => document.querySelector('script.ZA4bDx').textContent),
        click: () => ( showCode.value = !showCode.value )
      }
    }
  })
  const root = document.getElementById('ZA4bDx')
  app.use(ElementPlus).mount(root)
  </script>
  #+end_export
- [X] [[/vue/vue-teardown-10-sfc-style][compiler-sfc: upgrade to postcss 8]] ([[https://github.com/vuejs/vue-next/issues/2710][#2710]]) ([[https://github.com/vuejs/vue-next/commit/49bc2e4db568d4f9fa2ccfe4e22c792cfc02651a][49bc2e4]])
- [X] runtime-core: improve render context warning ([[https://github.com/vuejs/vue-next/issues/2496][#2496]]) ([[https://github.com/vuejs/vue-next/commit/288ae0a8d9444365ad7438462e072c425150cbf1][288ae0a]])

  问题： 组件渲染期间去访问一个不存在的属性时候，报错信息：

  #+begin_comment
  Property ${JSON.stringify(key)} was accessed during render but is not defined on instance.
  #+end_comment

  #+begin_src diff
  packages/runtime-core/src/componentPublicInstance.ts
@@ -349,7 +349,7 @@ export const PublicInstanceProxyHandlers: ProxyHandler<any> = {
          )} must be accessed via $data because it starts with a reserved ` +
            `character ("$" or "_") and is not proxied on the render context.`
        )
-      } else {
+      } else if (instance === currentRenderingInstance) {
        warn(
          `Property ${JSON.stringify(key)} was accessed during render ` +
            `but is not defined on instance.`
     #+end_src
- [X] runtime-core: props type support BigInt ([[https://github.com/vuejs/vue-next/issues/2891][#2891]]) ([[https://github.com/vuejs/vue-next/commit/ffd52885453d1621e45dff645ff1101e74ea40b2][ffd5288]])
  @@html:<span id="add-bigint"></span>@@

  修改代码：
  #+begin_src diff
const isSimpleType = /*#__PURE__*/ makeMap(
-  'String,Number,Boolean,Function,Symbol'
+  'String,Number,Boolean,Function,Symbol,BigInt'
)
  #+end_src

  测试
  #+begin_src js
const url = process.env.VNEXT_PKG_RC +'/../runtime-test/dist/runtime-test.cjs.js'
const value = require(url.replace('stb-', ''))
const { nodeOps, render, h, serializeInner: s } = value

const Comp = {
  props: { foo: BigInt },
  render() {
    return h('div', [this.foo])
  }
}

const root = nodeOps.createElement('div')
render(h(Comp,  {
  foo: BigInt(BigInt(100000111)) + BigInt(2000000000) * BigInt(30000000)
}), root)

console.log(s(root))
return 0
  #+end_src

  #+RESULTS:
  : <div>60000000100000111</div>
  : 0

** DONE Performance Improvements [1/1]
CLOSED: [2021-08-05 Thu 23:42]

- [X] reactivity: should not track __isVue ([[https://github.com/vuejs/vue-next/issues/2940][#2940]]) ([[https://github.com/vuejs/vue-next/commit/dd02cf37d5f5a6946bcae01ee70568e38a82c177][dd02cf3]])

  /@@ -93,7 +96,7 @@ function createGetter(isReadonly = false, shallow = false) {/

  #+begin_src diff
+  const isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`)

    if (
      isSymbol(key)
        ? builtInSymbols.has(key as symbol)
-        : key === `__proto__` || key === `__v_isRef`
+        : isNonTrackableKeys(key)
    ) {
      return res
    }

// 遇到 __isVue 也直接返回 Reflect.get 的结果，不往下 track 了。
  #+end_src

* 3.0.5(2020-12-30)

[[https://github.com/vuejs/vue-next/blob/master/CHANGELOG.md][vue-next/CHANGELOG.md at master · vuejs/vue-next]]

#+begin_tip
@@html:<p><strong>TIP</strong></p>@@

*Note*: this release contains a type-only change that requires TypeScript 4.0+,
which may cause build issues in projects still using TS 3.x.

#+end_tip

只包含一些类型的变更。

** DONE *Bug Fixes* [9/9]
CLOSED: [2021-08-05 Thu 23:44]

- [X] compiler-core: fix missing createVNode import on nested v-for ([[https://github.com/vuejs/vue-next/commit/ad4d3915d39515a3e9ff2de691f82cb922a314b9][ad4d391]]),
  closes [[https://github.com/vuejs/vue-next/issues/2718][#2718]]
- [X] compiler-sfc: should keep template nodes with no content ([[https://github.com/vuejs/vue-next/issues/2468][#2468]]) ([[https://github.com/vuejs/vue-next/commit/5b9b37fc9b363be2989c1e9d76ab6e950cdfe2ad][5b9b37f]]),
  closes [[https://github.com/vuejs/vue-next/issues/2463][#2463]]

  #+begin_src diff
   -> packages/compiler-sfc/src/parse.ts

   if (node.type !== NodeTypes.ELEMENT) {
      return
    }
-    if (!node.children.length && !hasSrc(node)) {
+    if (!node.children.length && !hasSrc(node) && node.tag !== 'template') {
      return
    }
    switch (node.tag) {
  #+end_src
- [X] [[/vue/vue-teardown-7-asset-transform/][compiler-sfc: support transforming asset urls with full base url.]] ([[https://github.com/vuejs/vue-next/issues/2477][#2477]]) ([[https://github.com/vuejs/vue-next/commit/db786b1afe41c26611a215e6d6599d50312b9c2f][db786b1]])

    针对相对路径而言，当提供了 base 选项的时候，会使用这个值去拼接，如：

    ~{ transformAssetUrls: { base: 'https://www.cheng92.com' } }~

    ~<img src="./vue/img/test.png" />~ 会被编译成：

    ~createVNode('img', { src: 'https://www.cheng92.com/vue/img/test.png' })~
- [X] runtime-core: component mount anchor memory leak ([[https://github.com/vuejs/vue-next/issues/2459][#2459]]) ([[https://github.com/vuejs/vue-next/commit/3867bb4c14131ef94098a62bffba97a5b7d1fe66][3867bb4]]), closes [[https://github.com/vuejs/vue-next/issues/2458][#2458]]

  [[/img/tmp/vue-bug-2459.png]]
- [X] runtime-core: skip patchBlockChildren if n1.dynamicChildren is null ([[https://github.com/vuejs/vue-next/issues/2717][#2717]]) ([[https://github.com/vuejs/vue-next/commit/c59897c7b0dbd82b5bbf3fbca945c0639ac37fb8][c59897c]]), closes [[https://github.com/vuejs/vue-next/issues/2715][#2715]] [[https://github.com/vuejs/vue-next/issues/2485][#2485]]

  #+begin_export html
    <script src="https://unpkg.com/vue@3.0.4/dist/vue.global.js"></script>
    <div id="IR8Cl"></div>
    <script src="/js/vue/tests/IR8Cl.js"></script>
    #+end_export

  这个问题原因是，一开始 HelloWorld 的 dynamicChildren 是 null。

  当点击 ADD 按钮的时候增加了一项数据，会进入 mountChildren -> patchBlockChildren

  #+begin_src typescript
  const patchBlockChildren: PatchBlockChildrenFn = (
    oldChildren,
    newChildren,
    fallbackContainer,
    parentComponent,
    parentSuspense,
    isSVG,
    slotScopeIds
  ) => {
    for (let i = 0; i < newChildren.length; i++) {
      const oldVNode = oldChildren[i] // dynamicChildren
      const newVNode = newChildren[i]

      // ...
      }
    }
  #+end_src

  而 ~dynamicChildren~ 在初始化的时候是个 ~null~ 值, 一开始就访问了
  ~dynamicChildren[i]~ 所以导致报错。

  修复代码([[https://github.com/vuejs/vue-next/commit/c59897c7b0dbd82b5bbf3fbca945c0639ac37fb8][c59897c]])，加个判断条件：

  #+begin_src diff
  if (
        patchFlag > 0 &&
        patchFlag & PatchFlags.STABLE_FRAGMENT &&
-        dynamicChildren &&
+        dynamicChildren &&
+        n1.dynamicChildren
      ) {
        // a stable fragment (template root or <template v-for>) doesn't need to
        // patch children order, but it may contain dynamicChildren.
        patchBlockChildren(
-         n1.dynamicChildren!,
+          n1.dynamicChildren,
          dynamicChildren,
          container,
          parentComponent,
          parentSuspense,
          isSVG,
          slotScopeIds
        )

  #+end_src
- [X] +runtime-dom: support mounting app on ShadowRoot+ ([[https://github.com/vuejs/vue-next/pull/2447][#2447]]) (b2189ba), closes [[https://github.com/vuejs/vue-next/issues/2399][#2399]]

  *>3.2* 中已经没有 ~__isShadowRoot~ 相关的代码了。
- [X] ssr: properly handle ssr empty slot and fallback (88f6b33)
- [X] [[/vue/vue-teardown-9-transition][transition: ensure manual style manipulation in transition leave hooks work]] ([[https://github.com/vuejs/vue-next/commit/cbaa3805064cb581fc2007cf63774c91d39844fe][cbaa380]]), closes [[https://github.com/vuejs/vue-next/issues/2720][#2720]]

  在 onLeave hook 中增加
  #+begin_src typescript
  forceReflow()
  addTransitionClass(el, leaveActiveClass)
  #+end_src

  去强制渲染，触发 ~leaveActiveClass~ 。
- [X] [[/vue/vue-teardown-9-transition][transition: ensure styles from *-leave-active trigger transition]] ([[https://github.com/vuejs/vue-next/issues/2716][#2716]]) ([[https://github.com/vuejs/vue-next/commit/3f8f9b67b3b54a7ae8405baf6d28be7ec074509d][3f8f9b6]]), closes [[https://github.com/vuejs/vue-next/issues/2712][#2712]]

** DONE Features [1/1]
CLOSED: [2021-08-05 Thu 23:44]

- [X] devtools: send instance (3626ff0)

  将组件实例给开发工具。

  #+begin_src diff
function createDevtoolsComponentHook(hook: DevtoolsHooks) {
  return (component: ComponentInternalInstance) => {
    if (!devtools) return
    devtools.emit(
      hook,
      component.appContext.app,
      component.uid,
-      component.parent ? component.parent.uid : undefined
+      component.parent ? component.parent.uid : undefined,
+      component
    )
  }
}
  #+end_src
