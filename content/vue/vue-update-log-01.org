#+TITLE: Vue3 更新日志 01(3.0.5 ~ 3.2.0-beta.1)
#+DATE: <2021-06-28 11:29:18>
#+TAGS[]: vue, vue3
#+CATEGORIES[]: vue
#+LANGUAGE: zh-cn
#+STARTUP: indent


#+begin_export html
<link href="https://fonts.goo~gleapis.com/cs~s2?family=ZCOOL+XiaoWei&display=swap" rel="stylesheet">
<link href="/js/vue/formatters-styles/style.css" rel="stylesheet">
<link href="/js/vue/formatters-styles/annotated.css" rel="stylesheet">
<link href="/js/vue/formatters-styles/html.css" rel="stylesheet">
<kbd>
<font color="blue" size="3" style="font-family: 'ZCOOL XiaoWei', serif;">
  诗号：六道同坠，魔劫万千，引渡如来。
</font>
</kbd><br><br>
<script src="/js/utils.js"></script>
<script src="/js/vue/vue-next.js"></script>
<!--<script src="https://unpkg.com/vue@next"></script>-->
<script>
insertCssLink("https://unpkg.com/element-plus/lib/theme-chalk/index.css");
</script>
<script src="https://unpkg.com/element-plus/lib/index.full.js"></script>
<script type='text/javascript' src="https://cdn.jsdelivr.net/npm/jsondiffpatch/dist/jsondiffpatch.umd.min.js"></script>
<script src="/js/vue/tests/common.js"></script>
#+end_export

[[/img/bdx/yiyeshu-001.jpg]]

* 前言

#+begin_tip
@@html:<p><strong>TIP</strong></p>@@

本系列文说明：会不定期的更新本地的 vue-next 仓库，本系列文章则是针对 git pull 后
的更新内容的分析和记录， 。

@@html:<strong><font color="red">可参过链接跳转到对应的分析文章</font></strong>@@
#+end_tip

更新内容：

很久没更新了，惨~~~~~~~~~

捡点重要的来看下吧，以后还是要保持每周拉一次代码比较好！！！

最初分析拉取的代码是： *3.0.4*, 现在都 *3.1.2* 了 尴尬！！!

* 3.0.6(2021-02-24)
** Important

此次更新重点内容：

 1. *ADD*: ~BigInt~ 类型和 /SFC/ 支持 @@html:<a href="#add-bigint">:link:</a>@@
 2. *FIX*: 修复 ~class: ['foo', false, undefined, 'bar']~ 被解析成 ~<div class="foo
    bar"/>~ 问题 @@html:<a href="#fix-array-class">:link:</a>@@。

** Bug Fixes [6/27]
:PROPERTIES:
:COLUMNS:  %CUSTOM_ID[(Custom Id)]
:CUSTOM_ID: bug306
:END:

- [-] compiler-core: do not mark v-for as stable on const bindings (734c65b), closes vitejs/vite#1956
- [-] compiler-dom: ensure global build filename matches the one defined in package.json (close #3181) (#3185) (96b6433)
- [-] compiler-dom: fix cdn entries (fcb6c89), closes #3181 #3185
- [-] compiler-sfc: compiler blank srcset (#3005) (9dc816d)
- [-] compiler-sfc: removeSpecifier issue when removing initial imports (script-setup) (#2729) (6d762a8)
- [-] compiler-sfc: the empty lang attribute should be treated as no lang specified (#3051) (6d5b623)
- [-] compiler-sfc: transformAssetUrls.base should not affect known module requests (2ea9867)
- [-] compiler-sfc: treat const reactive() bindings as mutable (03360ce)
- [-] compiler-ssr: avoid duplicated asset imports merged from component slot client branch (c69f4ea), closes vitejs/vite#2034
- [-] devtools: init devtools in production (#2906) (4d9bcb7)
- [-] devtools: send instance to devtools when it's mounted instead of created (4fecb27)
- [-] docs: change reference to passed deadline (#2930) (de7f9d1)
- [-] hmr: deep clone reused hoisted trees during dev (5a7a1b8), closes vitejs/vite#2022
- [-] runtime-core: align $parent/$root with the template ref when using expose (#3158) (f43a3b0)
- [-] runtime-core: allow overriding properties other than props (#3105) (73117f6)
- [-] runtime-core: check the DEV_ROOT_FRAGMENT flag correctly in the dev environment (#2750) (347a879)
- [-] runtime-core: component methods should override global properties in DEV (#3074) (2587f36)
- [-] runtime-core: ensure app instance can be garbage collected after unmount (close #2907) (#2909) (60e05ef)
- [-] runtime-core: instanceWatch should pass this.proxy to source as the first argument (#2753) (ec8fd10)
- [-] runtime-dom: ensure readonly type prop on textarea is handled patched as attribute (#2888) (c5d147c), closes #2766
- [-] kebab-case events are attached correctly on web components, see [[https://github.com/vuejs/vue-next/issues/2841][#2841]]
  ([[https://github.com/vuejs/vue-next/issues/2847][#2847]]) ([[https://github.com/vuejs/vue-next/commit/b302cbbbd3fd512f2b8afbd9c873060a40bf8e62][b302cbb]])

  这个问题意思是，vue 中并没有对来自 DOM 中的事件名为 ~foo-bar~ 形式的事件做处理，
  尽管在 vue 模板中有 ~<div @foo-bar="click"/>~ 绑定事件。

  而事情的原因在于：

  vue 中将 ~@foo-bar~ 实际是转换成了 ~forBar~ ([[/vue/vue-teardown-6-event-listen/][Vue3 功能拆解⑥ directives 事件绑定机制]])，所以对于原生组件发出的 ~foo-bar~ 事件
  是有没做出响应。

  [[https://jsfiddle.net/meo9Lfya/3/][提问者测试代码 ->]]:

  #+begin_export html
  <div id="u79o4f"></div>
  <script src="/js/vue/tests/u79o4f.js"></script>
  #+end_export


- [X] types: extract the correct props type for the DateConstructor ([[https://github.com/vuejs/vue-next/issues/2676][#2676]]) ([[https://github.com/vuejs/vue-next/commit/48f0d2944f0f9d2f556e62782fc61985897b2ed4][48f0d29]])
- [X] ensure all published packages contan a LICENCE file (close #2650) (#2857) (6a48d23)
- [X] remove superfluous spaces when normalizing class ([[https://github.com/vuejs/vue-next/issues/3083][#3083]]) ([[https://github.com/vuejs/vue-next/commit/4b551420fc058c4683219db5d75893f9fc69aa04][4b55142]])
  @@html:<span id="fix-array-class"></span>@@

  问题如下代码，正常应该忽略 ~undefind~, ~false~ ：
  #+begin_src js
const url = process.env.VNEXT_PKG_RC +'/../runtime-test/dist/runtime-test.cjs.js'
const value = require(url.replace('stb-', ''))
const { nodeOps, render, h, serializeInner: s } = value

const Comp = {
  props: { foo: BigInt },
  render() {
    return h('div', { class: ['foo', undefined, false, 'bar'] }, [this.foo])
  }
}

const root = nodeOps.createElement('div')
render(h(Comp,  {
  foo: BigInt(BigInt(100000111)) + BigInt(2000000000) * BigInt(30000000)
}), root)

console.log(s(root))
return 0
  #+end_src

  #+RESULTS:
  : <div class="foo   bar">60000000100000111</div>
  : 0

  修复：
  #+begin_src diff
 packages/shared/src/normalizeProp.ts
@@ -62,7 +62,10 @@ export function normalizeClass(value: unknown): string {
    res = value
  } else if (isArray(value)) {
    for (let i = 0; i < value.length; i++) {
-      res += normalizeClass(value[i]) + ' '
+      const normalized = normalizeClass(value[i])
+      if (normalized) {
+        res += normalized + ' '
+      }
    }
  } else if (isObject(value)) {
    for (const name in value) {
  #+end_src
- [X] runtime-dom: enable set form attr to null on form-elements ([[https://github.com/vuejs/vue-next/issues/2840][#2840]]) ([[https://github.com/vuejs/vue-next/issues/2849][#2849]]) ([[https://github.com/vuejs/vue-next/commit/f2624380731cc32e71523e8c2c98037e98e09319][f262438]])

  #+begin_src diff
packages/runtime-dom/src/patchProp.ts
@@ -3,7 +3,13 @@ import { patchStyle } from './modules/style'
-  // #1787 form as an attribute must be a string, while it accepts an Element as
-  // a prop
-  if (key === 'form' && typeof value === 'string') {
+  // #1787, #2840 the form property is readonly and can only be set as an
+  // attribute using a string value
+  if (key === 'form' && isFormTag(el.tagName)) {
    return false
  }

packages/shared/src/domTagConfig.ts
@@ -30,6 +30,11 @@ const SVG_TAGS =
const VOID_TAGS =
  'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr'

+ const FORM_TAGS =
+  'button,datalist,fieldset,input,keygen,label,legend,meter,optgroup,option,' +
+  'output,progress,select,textarea'

export const isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS)
export const isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS)
export const isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS)
export const isFormTag = /*#__PURE__*/ makeMap(FORM_TAGS, true)
  #+end_src
- [X] toRef: ref created from union typed prop can't be used in watch ([[https://github.com/vuejs/vue-next/issues/3048][#3048]]) ([[https://github.com/vuejs/vue-next/commit/4ca4666d58ee8025570dc14f1c163bdeac9c6012][4ca4666]])
- [X] should prefix ShadowRoot with window. ([[https://github.com/vuejs/vue-next/issues/2943][#2943]]) ([[https://github.com/vuejs/vue-next/commit/97d6f1a716045123d0e05600e64f11f92f504747][97d6f1a]])

  通过 window 去使用 ShadowRoot，因为它不是 window 上可枚举的属性。

  #+begin_src diff
 packages/runtime-dom/src/index.ts
@@ -119,7 +119,7 @@ function normalizeContainer(
  }
  if (
    __DEV__ &&
-    container instanceof ShadowRoot &&
+    container instanceof window.ShadowRoot &&
    container.mode === 'closed'
  ) {
  #+end_src

** Features [5/5]
- [X] remove useless option in KeepAlive ([[https://github.com/vuejs/vue-next/issues/3170][#3170]]) ([[https://github.com/vuejs/vue-next/commit/bd1240c1270b610c4ffcf6c32e2bbe2c9265020f][bd1240c]])

  删除了 KeepAlive 的 ~inheritRef: true~ 选项。
- [X] compiler-core: support BigInt in template ([[https://github.com/vuejs/vue-next/issues/2900][#2900]]) ([[https://github.com/vuejs/vue-next/commit/c9f94fa3cfbe8fcd9ea3d49d523dfb282c468369][c9f94fa]])

  将 ~BigInt~ 标记为全局变量。

  #+begin_src diff
  packages/shared/src/globalsWhitelist.ts
@@ -3,6 +3,6 @@ import { makeMap } from './makeMap'
const GLOBALS_WHITE_LISTED =
  'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +
  'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +
-  'Object,Boolean,String,RegExp,Map,Set,JSON,Intl'
+  'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt'

export const isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED)
#+end_src

  测试结果：
  #+begin_export html
  <div id="ZA4bDx"></div>
  <script class="ZA4bDx">
  const app = Vue.createApp({
    template: `
      <div class="comment-block">{{ BigInt(BigInt(100000111)) + BigInt(2000000000n) * 30000000n }}</div>
      <el-button type="primary" @click="click">查看测试源码</el-button>
      <div class="chroma language-js" v-if="showCode"><pre class="chroma">{{code}}</pre></div>
    `,
    setup() {
      const showCode = Vue.ref(false)
      return {
        showCode,
        code: Vue.computed(() => document.querySelector('script.ZA4bDx').textContent),
        click: () => ( showCode.value = !showCode.value )
      }
    }
  })
  const root = document.getElementById('ZA4bDx')
  app.use(ElementPlus).mount(root)
  </script>
  #+end_export
- [X] [[/vue/vue-teardown-10-sfc-style][compiler-sfc: upgrade to postcss 8]] ([[https://github.com/vuejs/vue-next/issues/2710][#2710]]) ([[https://github.com/vuejs/vue-next/commit/49bc2e4db568d4f9fa2ccfe4e22c792cfc02651a][49bc2e4]])
- [X] runtime-core: improve render context warning ([[https://github.com/vuejs/vue-next/issues/2496][#2496]]) ([[https://github.com/vuejs/vue-next/commit/288ae0a8d9444365ad7438462e072c425150cbf1][288ae0a]])

  问题： 组件渲染期间去访问一个不存在的属性时候，报错信息：

  #+begin_comment
  Property ${JSON.stringify(key)} was accessed during render but is not defined on instance.
  #+end_comment

  #+begin_src diff
  packages/runtime-core/src/componentPublicInstance.ts
@@ -349,7 +349,7 @@ export const PublicInstanceProxyHandlers: ProxyHandler<any> = {
          )} must be accessed via $data because it starts with a reserved ` +
            `character ("$" or "_") and is not proxied on the render context.`
        )
-      } else {
+      } else if (instance === currentRenderingInstance) {
        warn(
          `Property ${JSON.stringify(key)} was accessed during render ` +
            `but is not defined on instance.`
     #+end_src
- [X] runtime-core: props type support BigInt ([[https://github.com/vuejs/vue-next/issues/2891][#2891]]) ([[https://github.com/vuejs/vue-next/commit/ffd52885453d1621e45dff645ff1101e74ea40b2][ffd5288]])
  @@html:<span id="add-bigint"></span>@@

  修改代码：
  #+begin_src diff
const isSimpleType = /*#__PURE__*/ makeMap(
-  'String,Number,Boolean,Function,Symbol'
+  'String,Number,Boolean,Function,Symbol,BigInt'
)
  #+end_src

  测试
  #+begin_src js
const url = process.env.VNEXT_PKG_RC +'/../runtime-test/dist/runtime-test.cjs.js'
const value = require(url.replace('stb-', ''))
const { nodeOps, render, h, serializeInner: s } = value

const Comp = {
  props: { foo: BigInt },
  render() {
    return h('div', [this.foo])
  }
}

const root = nodeOps.createElement('div')
render(h(Comp,  {
  foo: BigInt(BigInt(100000111)) + BigInt(2000000000) * BigInt(30000000)
}), root)

console.log(s(root))
return 0
  #+end_src

  #+RESULTS:
  : <div>60000000100000111</div>
  : 0

** Performance Improvements [1/1]

- [X] reactivity: should not track __isVue ([[https://github.com/vuejs/vue-next/issues/2940][#2940]]) ([[https://github.com/vuejs/vue-next/commit/dd02cf37d5f5a6946bcae01ee70568e38a82c177][dd02cf3]])

  /@@ -93,7 +96,7 @@ function createGetter(isReadonly = false, shallow = false) {/

  #+begin_src diff
+  const isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`)

    if (
      isSymbol(key)
        ? builtInSymbols.has(key as symbol)
-        : key === `__proto__` || key === `__v_isRef`
+        : isNonTrackableKeys(key)
    ) {
      return res
    }

// 遇到 __isVue 也直接返回 Reflect.get 的结果，不往下 track 了。
  #+end_src

* 3.0.5(2020-12-30)

[[https://github.com/vuejs/vue-next/blob/master/CHANGELOG.md][vue-next/CHANGELOG.md at master · vuejs/vue-next]]

#+begin_tip
@@html:<p><strong>TIP</strong></p>@@

*Note*: this release contains a type-only change that requires TypeScript 4.0+,
which may cause build issues in projects still using TS 3.x.

#+end_tip

只包含一些类型的变更。

** *Bug Fixes* [0/1]

- compiler-core: fix missing createVNode import on nested v-for ([[https://github.com/vuejs/vue-next/commit/ad4d3915d39515a3e9ff2de691f82cb922a314b9][ad4d391]]),
  closes [[https://github.com/vuejs/vue-next/issues/2718][#2718]]
- compiler-sfc: should keep template nodes with no content ([[https://github.com/vuejs/vue-next/issues/2468][#2468]]) ([[https://github.com/vuejs/vue-next/commit/5b9b37fc9b363be2989c1e9d76ab6e950cdfe2ad][5b9b37f]]),
  closes [[https://github.com/vuejs/vue-next/issues/2463][#2463]]

  #+begin_src diff
   -> packages/compiler-sfc/src/parse.ts

   if (node.type !== NodeTypes.ELEMENT) {
      return
    }
-    if (!node.children.length && !hasSrc(node)) {
+    if (!node.children.length && !hasSrc(node) && node.tag !== 'template') {
      return
    }
    switch (node.tag) {
  #+end_src

- [[/vue/vue-teardown-7-asset-transform/][compiler-sfc: support transforming asset urls with full base url.]] ([[https://github.com/vuejs/vue-next/issues/2477][#2477]]) ([[https://github.com/vuejs/vue-next/commit/db786b1afe41c26611a215e6d6599d50312b9c2f][db786b1]])

    针对相对路径而言，当提供了 base 选项的时候，会使用这个值去拼接，如：

    ~{ transformAssetUrls: { base: 'https://www.cheng92.com' } }~

    ~<img src="./vue/img/test.png" />~ 会被编译成：

    ~createVNode('img', { src: 'https://www.cheng92.com/vue/img/test.png' })~

- runtime-core: component mount anchor memory leak ([[https://github.com/vuejs/vue-next/issues/2459][#2459]]) ([[https://github.com/vuejs/vue-next/commit/3867bb4c14131ef94098a62bffba97a5b7d1fe66][3867bb4]]), closes [[https://github.com/vuejs/vue-next/issues/2458][#2458]]

  [[/img/tmp/vue-bug-2459.png]]

- runtime-core: skip patchBlockChildren if n1.dynamicChildren is null ([[https://github.com/vuejs/vue-next/issues/2717][#2717]]) ([[https://github.com/vuejs/vue-next/commit/c59897c7b0dbd82b5bbf3fbca945c0639ac37fb8][c59897c]]), closes [[https://github.com/vuejs/vue-next/issues/2715][#2715]] [[https://github.com/vuejs/vue-next/issues/2485][#2485]]

  #+begin_export html
    <script src="https://unpkg.com/vue@3.0.4/dist/vue.global.js"></script>
    <div id="IR8Cl"></div>
    <script src="/js/vue/tests/IR8Cl.js"></script>
    #+end_export

  这个问题原因是，一开始 HelloWorld 的 dynamicChildren 是 null。

  当点击 ADD 按钮的时候增加了一项数据，会进入 mountChildren -> patchBlockChildren

  #+begin_src typescript
  const patchBlockChildren: PatchBlockChildrenFn = (
    oldChildren,
    newChildren,
    fallbackContainer,
    parentComponent,
    parentSuspense,
    isSVG,
    slotScopeIds
  ) => {
    for (let i = 0; i < newChildren.length; i++) {
      const oldVNode = oldChildren[i] // dynamicChildren
      const newVNode = newChildren[i]

      // ...
      }
    }
  #+end_src

  而 ~dynamicChildren~ 在初始化的时候是个 ~null~ 值, 一开始就访问了
  ~dynamicChildren[i]~ 所以导致报错。

  修复代码([[https://github.com/vuejs/vue-next/commit/c59897c7b0dbd82b5bbf3fbca945c0639ac37fb8][c59897c]])，加个判断条件：

  #+begin_src diff
  if (
        patchFlag > 0 &&
        patchFlag & PatchFlags.STABLE_FRAGMENT &&
-        dynamicChildren &&
+        dynamicChildren &&
+        n1.dynamicChildren
      ) {
        // a stable fragment (template root or <template v-for>) doesn't need to
        // patch children order, but it may contain dynamicChildren.
        patchBlockChildren(
-         n1.dynamicChildren!,
+          n1.dynamicChildren,
          dynamicChildren,
          container,
          parentComponent,
          parentSuspense,
          isSVG,
          slotScopeIds
        )

  #+end_src

- +runtime-dom: support mounting app on ShadowRoot+ ([[https://github.com/vuejs/vue-next/pull/2447][#2447]]) (b2189ba), closes [[https://github.com/vuejs/vue-next/issues/2399][#2399]]

  *>3.2* 中已经没有 ~__isShadowRoot~ 相关的代码了。

- [ ] ssr: properly handle ssr empty slot and fallback (88f6b33)

- [[/vue/vue-teardown-9-transition][transition: ensure manual style manipulation in transition leave hooks work]] ([[https://github.com/vuejs/vue-next/commit/cbaa3805064cb581fc2007cf63774c91d39844fe][cbaa380]]), closes [[https://github.com/vuejs/vue-next/issues/2720][#2720]]

  在 onLeave hook 中增加
  #+begin_src typescript
  forceReflow()
  addTransitionClass(el, leaveActiveClass)
  #+end_src

  去强制渲染，触发 ~leaveActiveClass~ 。

- [[/vue/vue-teardown-9-transition][transition: ensure styles from *-leave-active trigger transition]] ([[https://github.com/vuejs/vue-next/issues/2716][#2716]]) ([[https://github.com/vuejs/vue-next/commit/3f8f9b67b3b54a7ae8405baf6d28be7ec074509d][3f8f9b6]]), closes [[https://github.com/vuejs/vue-next/issues/2712][#2712]]

** Features

- devtools: send instance (3626ff0)

  将组件实例给开发工具。

  #+begin_src diff
function createDevtoolsComponentHook(hook: DevtoolsHooks) {
  return (component: ComponentInternalInstance) => {
    if (!devtools) return
    devtools.emit(
      hook,
      component.appContext.app,
      component.uid,
-      component.parent ? component.parent.uid : undefined
+      component.parent ? component.parent.uid : undefined,
+      component
    )
  }
}
  #+end_src
